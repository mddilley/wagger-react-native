{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Option = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _button = require(\"../button/button.component\");\n\nvar _div = require(\"../div/div.component\");\n\nvar _icon = require(\"../icon/icon.component\");\n\nvar _text = require(\"../text/text.component\");\n\nvar _jsxFileName = \"/Users/pawankumar/Sites/react-native-magnus/src/ui/select/option.component.tsx\";\n\nvar Option = function Option(props) {\n  var children = props.children,\n      suffix = props.suffix,\n      value = props.value,\n      onPressProp = props.onPress,\n      onSelect = props.onSelect,\n      selectedValue = props.selectedValue,\n      rest = (0, _objectWithoutProperties2.default)(props, [\"children\", \"suffix\", \"value\", \"onPress\", \"onSelect\", \"selectedValue\"]);\n  var isSelected = Array.isArray(selectedValue) ? selectedValue.includes(value) : selectedValue === value;\n\n  var onPress = function onPress(event) {\n    if (onSelect) {\n      onSelect(value);\n    }\n\n    if (onPressProp) {\n      onPressProp(event);\n    }\n  };\n\n  var renderSuffix = function renderSuffix() {\n    if (suffix && isSelected) {\n      if (typeof suffix === 'string') {\n        return React.createElement(_icon.Icon, {\n          name: suffix,\n          fontSize: \"md\",\n          color: \"green600\",\n          mr: \"md\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 16\n          }\n        });\n      }\n\n      return suffix;\n    }\n\n    if (isSelected) {\n      return React.createElement(_icon.Icon, {\n        name: \"check\",\n        fontSize: \"md\",\n        color: \"green600\",\n        mr: \"md\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return false;\n  };\n\n  var renderChildren = function renderChildren() {\n    if (typeof children === 'string') {\n      return React.createElement(_text.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 14\n        }\n      }, children);\n    }\n\n    return children;\n  };\n\n  return React.createElement(_button.Button, (0, _extends2.default)({}, rest, {\n    onPress: onPress,\n    block: true,\n    alignItems: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }), React.createElement(_div.Div, {\n    flex: 1,\n    bg: \"transparent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, renderChildren()), renderSuffix());\n};\n\nexports.Option = Option;\nOption.defaultProps = {\n  onSelect: function onSelect() {},\n  rounded: 0,\n  bg: 'white',\n  p: 0,\n  color: 'black',\n  alignItems: 'flex-start',\n  justifyContent: 'flex-start',\n  center: false\n};","map":{"version":3,"sources":["option.component.tsx"],"names":["Option","children","suffix","value","onPressProp","onSelect","selectedValue","rest","props","isSelected","Array","onPress","renderSuffix","renderChildren","rounded","bg","p","color","alignItems","justifyContent","center"],"mappings":"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","sourcesContent":["import * as React from 'react';\n\nimport { GestureResponderEvent as RNGestureResponderEvent } from 'react-native';\nimport { OptionProps } from './option.type';\nimport { Button } from '../button/button.component';\nimport { Div } from '../div/div.component';\nimport { Icon } from '../icon/icon.component';\nimport { Text } from '../text/text.component';\n\nconst Option: React.FunctionComponent<OptionProps> = (props) => {\n  const {\n    children,\n    suffix,\n    value,\n    onPress: onPressProp,\n    onSelect,\n    selectedValue,\n    ...rest\n  } = props;\n  const isSelected = Array.isArray(selectedValue)\n    ? selectedValue.includes(value)\n    : selectedValue === value;\n\n  /**\n   * on press select option\n   *\n   * @param e\n   */\n  const onPress = (event: RNGestureResponderEvent) => {\n    if (onSelect) {\n      onSelect(value);\n    }\n\n    if (onPressProp) {\n      onPressProp(event);\n    }\n  };\n\n  /**\n   * render suffix\n   */\n  const renderSuffix = () => {\n    if (suffix && isSelected) {\n      if (typeof suffix === 'string') {\n        return <Icon name={suffix} fontSize=\"md\" color=\"green600\" mr=\"md\" />;\n      }\n\n      return suffix;\n    }\n\n    if (isSelected) {\n      return <Icon name=\"check\" fontSize=\"md\" color=\"green600\" mr=\"md\" />;\n    }\n\n    return false;\n  };\n\n  const renderChildren = () => {\n    if (typeof children === 'string') {\n      return <Text>{children}</Text>;\n    }\n\n    return children;\n  };\n  return (\n    <Button {...rest} onPress={onPress} block alignItems=\"center\">\n      <Div flex={1} bg=\"transparent\">\n        {renderChildren()}\n      </Div>\n      {renderSuffix()}\n    </Button>\n  );\n};\n\nOption.defaultProps = {\n  onSelect: () => {},\n  rounded: 0,\n  bg: 'white',\n  p: 0,\n  color: 'black',\n  alignItems: 'flex-start',\n  justifyContent: 'flex-start',\n  center: false,\n};\n\nexport { Option };\n"]},"metadata":{},"sourceType":"script"}