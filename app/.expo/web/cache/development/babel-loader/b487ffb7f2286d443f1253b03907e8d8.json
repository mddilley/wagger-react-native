{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Radio = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _radio = require(\"./radio.style\");\n\nvar _theme = require(\"../../theme\");\n\nvar _icon = require(\"../icon/icon.component\");\n\nvar _theme2 = require(\"../../theme/theme.service\");\n\nvar _radio2 = require(\"./radio.service\");\n\nvar _group = require(\"./group.component\");\n\nvar _utilities = require(\"../../utilities\");\n\nvar _jsxFileName = \"/Users/pawankumar/Sites/react-native-magnus/src/ui/radio/radio.component.tsx\";\n\nvar Radio = function Radio(props) {\n  var m = props.m,\n      mt = props.mt,\n      mr = props.mr,\n      mb = props.mb,\n      ml = props.ml,\n      ms = props.ms,\n      p = props.p,\n      pr = props.pr,\n      pt = props.pt,\n      pb = props.pb,\n      pl = props.pl,\n      h = props.h,\n      w = props.w,\n      bg = props.bg,\n      minW = props.minW,\n      minH = props.minH,\n      suffix = props.suffix,\n      style = props.style,\n      fontSize = props.fontSize,\n      fontWeight = props.fontWeight,\n      prefix = props.prefix,\n      rounded = props.rounded,\n      roundedTop = props.roundedTop,\n      roundedRight = props.roundedRight,\n      roundedBottom = props.roundedBottom,\n      roundedLeft = props.roundedLeft,\n      colorProp = props.color,\n      loading = props.loading,\n      disabled = props.disabled,\n      loaderColor = props.loaderColor,\n      loaderSize = props.loaderSize,\n      children = props.children,\n      borderColor = props.borderColor,\n      borderBottomColor = props.borderBottomColor,\n      borderLeftColor = props.borderLeftColor,\n      borderTopColor = props.borderTopColor,\n      borderRightColor = props.borderRightColor,\n      borderWidth = props.borderWidth,\n      borderLeftWidth = props.borderLeftWidth,\n      borderRightWidth = props.borderRightWidth,\n      borderBottomWidth = props.borderBottomWidth,\n      borderTopWidth = props.borderTopWidth,\n      borderEndWidth = props.borderEndWidth,\n      shadow = props.shadow,\n      borderless = props.borderless,\n      shadowColor = props.shadowColor,\n      block = props.block,\n      alignSelf = props.alignSelf,\n      activeIcon = props.activeIcon,\n      inactiveIcon = props.inactiveIcon,\n      onChange = props.onChange,\n      activeColor = props.activeColor,\n      inactiveColor = props.inactiveColor,\n      defaultChecked = props.defaultChecked,\n      value = props.value,\n      checkedProp = props.checked,\n      onPressProp = props.onPress,\n      rest = (0, _objectWithoutProperties2.default)(props, [\"m\", \"mt\", \"mr\", \"mb\", \"ml\", \"ms\", \"p\", \"pr\", \"pt\", \"pb\", \"pl\", \"h\", \"w\", \"bg\", \"minW\", \"minH\", \"suffix\", \"style\", \"fontSize\", \"fontWeight\", \"prefix\", \"rounded\", \"roundedTop\", \"roundedRight\", \"roundedBottom\", \"roundedLeft\", \"color\", \"loading\", \"disabled\", \"loaderColor\", \"loaderSize\", \"children\", \"borderColor\", \"borderBottomColor\", \"borderLeftColor\", \"borderTopColor\", \"borderRightColor\", \"borderWidth\", \"borderLeftWidth\", \"borderRightWidth\", \"borderBottomWidth\", \"borderTopWidth\", \"borderEndWidth\", \"shadow\", \"borderless\", \"shadowColor\", \"block\", \"alignSelf\", \"activeIcon\", \"inactiveIcon\", \"onChange\", \"activeColor\", \"inactiveColor\", \"defaultChecked\", \"value\", \"checked\", \"onPress\"]);\n\n  var _useContext = (0, React.useContext)(_theme.ThemeContext),\n      theme = _useContext.theme;\n\n  var _useState = (0, React.useState)(props.checked || defaultChecked),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      checked = _useState2[0],\n      setChecked = _useState2[1];\n\n  var _useState3 = (0, React.useState)(false),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      focussed = _useState4[0],\n      setFocussed = _useState4[1];\n\n  var computedStyle = (0, _radio.getStyle)(theme, props, {\n    focussed: focussed\n  });\n  (0, React.useEffect)(function () {\n    if ('checked' in props) {\n      setChecked(props.checked);\n    }\n  }, [props]);\n\n  var onPress = function onPress(event) {\n    if (disabled) {\n      return;\n    }\n\n    if (!('checked' in props)) {\n      setChecked(true);\n    }\n\n    if ((0, _utilities.isFunction)(onPressProp)) {\n      onPressProp(event);\n    }\n\n    if ((0, _utilities.isFunction)(onChange)) {\n      onChange(value);\n    }\n  };\n\n  var onPressIn = function onPressIn() {\n    setFocussed(true);\n  };\n\n  var onPressOut = function onPressOut() {\n    setFocussed(false);\n  };\n\n  var iconName = (0, _radio2.getIconName)(checked);\n  var iconColor = (0, _radio2.getIconColor)(checked, disabled, activeColor, inactiveColor, theme);\n\n  var getIcon = function getIcon() {\n    if (loading) {\n      return React.createElement(_reactNative.ActivityIndicator, {\n        size: (0, _theme2.getThemeProperty)(theme.fontSize, fontSize),\n        color: (0, _theme2.getThemeProperty)(theme.colors, activeColor),\n        style: {\n          zIndex: 2,\n          position: 'relative'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }\n      });\n    }\n\n    if (checked) {\n      if (activeIcon && typeof activeIcon === 'string') {\n        return React.createElement(_icon.Icon, {\n          name: activeIcon,\n          color: iconColor,\n          style: {\n            zIndex: 2,\n            position: 'relative'\n          },\n          fontFamily: \"AntDesign\",\n          fontSize: fontSize,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 11\n          }\n        });\n      }\n\n      if (activeIcon) {\n        return activeIcon;\n      }\n    } else {\n      if (inactiveIcon && typeof inactiveIcon === 'string') {\n        return React.createElement(_icon.Icon, {\n          name: inactiveIcon,\n          color: iconColor,\n          style: {\n            zIndex: 2,\n            position: 'relative'\n          },\n          fontFamily: \"AntDesign\",\n          fontSize: fontSize,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 11\n          }\n        });\n      }\n\n      if (inactiveIcon) {\n        return inactiveIcon;\n      }\n    }\n\n    return React.createElement(_icon.Icon, {\n      name: iconName,\n      color: iconColor,\n      style: {\n        zIndex: 2,\n        position: 'relative'\n      },\n      fontFamily: \"MaterialIcons\",\n      fontSize: fontSize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 7\n      }\n    });\n  };\n\n  var renderChildren = function renderChildren() {\n    if ((0, _utilities.isFunction)(children)) {\n      return children({\n        focussed: focussed,\n        disabled: disabled,\n        checked: checked,\n        loading: loading\n      });\n    }\n\n    return React.createElement(React.Fragment, null, prefix, React.createElement(_reactNative.View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }\n    }, React.createElement(_reactNative.View, {\n      style: computedStyle.highlightContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }\n    }), React.createElement(_reactNative.View, {\n      style: computedStyle.icon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }\n    }, icon)), children, suffix);\n  };\n\n  var icon = getIcon();\n  return React.createElement(_reactNative.Pressable, (0, _extends2.default)({}, rest, {\n    style: computedStyle.button,\n    onPress: disabled ? undefined : onPress,\n    onPressIn: disabled ? undefined : onPressIn,\n    onPressOut: disabled ? undefined : onPressOut,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 5\n    }\n  }), React.createElement(_reactNative.View, {\n    style: computedStyle.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }\n  }, renderChildren()));\n};\n\nexports.Radio = Radio;\nRadio.defaultProps = {\n  defaultChecked: false,\n  activeColor: 'blue600',\n  inactiveColor: 'gray500',\n  highlightBg: 'gray300',\n  bg: 'transparent',\n  p: 'none',\n  color: 'white',\n  rounded: 'circle',\n  loading: false,\n  disabled: false,\n  loaderSize: 'md',\n  loaderColor: 'gray400',\n  block: false,\n  position: 'relative',\n  shadowColor: 'gray800',\n  shadow: 0,\n  fontSize: '4xl',\n  borderless: true,\n  alignItems: 'center',\n  justifyContent: 'center',\n  alignSelf: 'flex-start',\n  onPress: function onPress() {},\n  flexDir: 'row'\n};\nRadio.Group = _group.RadioGroup;","map":{"version":3,"sources":["radio.component.tsx"],"names":["Radio","m","mt","mr","mb","ml","ms","p","pr","pt","pb","pl","h","w","bg","minW","minH","suffix","style","fontSize","fontWeight","prefix","rounded","roundedTop","roundedRight","roundedBottom","roundedLeft","colorProp","loading","disabled","loaderColor","loaderSize","children","borderColor","borderBottomColor","borderLeftColor","borderTopColor","borderRightColor","borderWidth","borderLeftWidth","borderRightWidth","borderBottomWidth","borderTopWidth","borderEndWidth","shadow","borderless","shadowColor","block","alignSelf","activeIcon","inactiveIcon","onChange","activeColor","inactiveColor","defaultChecked","value","checkedProp","onPressProp","rest","props","theme","ThemeContext","checked","setChecked","focussed","setFocussed","computedStyle","onPress","onPressIn","onPressOut","iconName","iconColor","getIcon","zIndex","position","renderChildren","icon","highlightBg","color","alignItems","justifyContent","flexDir","RadioGroup"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useContext, useState, useEffect } from 'react';\nimport {\n  View as RNView,\n  ActivityIndicator,\n  GestureResponderEvent as RNGestureResponderEvent,\n  Pressable as RNButton,\n} from 'react-native';\n\nimport { getStyle } from './radio.style';\nimport { ThemeContext } from '../../theme';\nimport { Icon } from '../icon/icon.component';\nimport { getThemeProperty } from '../../theme/theme.service';\nimport { getIconName, getIconColor } from './radio.service';\nimport { IRadioProps, IRadio } from './radio.type';\nimport { RadioGroup } from './group.component';\nimport { isFunction } from '../../utilities';\n\nconst Radio: IRadio<IRadioProps> = (props) => {\n  const {\n    m,\n    mt,\n    mr,\n    mb,\n    ml,\n    ms,\n    p,\n    pr,\n    pt,\n    pb,\n    pl,\n    h,\n    w,\n    bg,\n    minW,\n    minH,\n    suffix,\n    style,\n    fontSize,\n    fontWeight,\n    prefix,\n    rounded,\n    roundedTop,\n    roundedRight,\n    roundedBottom,\n    roundedLeft,\n    color: colorProp,\n    loading,\n    disabled,\n    loaderColor,\n    loaderSize,\n    children,\n    borderColor,\n    borderBottomColor,\n    borderLeftColor,\n    borderTopColor,\n    borderRightColor,\n    borderWidth,\n    borderLeftWidth,\n    borderRightWidth,\n    borderBottomWidth,\n    borderTopWidth,\n    borderEndWidth,\n    shadow,\n    borderless,\n    shadowColor,\n    block,\n    alignSelf,\n    activeIcon,\n    inactiveIcon,\n    onChange,\n    activeColor,\n    inactiveColor,\n    defaultChecked,\n    value,\n    checked: checkedProp,\n    onPress: onPressProp,\n    ...rest\n  } = props;\n  const { theme } = useContext(ThemeContext);\n  const [checked, setChecked] = useState(props.checked || defaultChecked);\n  const [focussed, setFocussed] = useState(false);\n  const computedStyle = getStyle(theme, props, { focussed });\n\n  useEffect(() => {\n    if ('checked' in props) {\n      setChecked(props.checked);\n    }\n  }, [props]);\n\n  /**\n   * on press radio\n   */\n  const onPress = (event: RNGestureResponderEvent) => {\n    if (disabled) {\n      return;\n    }\n\n    // set the checked to true on press if there is no checked prop pass\n    if (!('checked' in props)) {\n      setChecked(true);\n    }\n\n    if (isFunction(onPressProp)) {\n      onPressProp(event);\n    }\n\n    if (isFunction(onChange)) {\n      onChange(value);\n    }\n  };\n\n  /**\n   * sets focussed to true\n   *\n   * @param event\n   */\n  const onPressIn = () => {\n    setFocussed(true);\n  };\n\n  /**\n   * sets focussed to true\n   *\n   * @param event\n   */\n  const onPressOut = () => {\n    setFocussed(false);\n  };\n\n  const iconName = getIconName(checked);\n  const iconColor = getIconColor(\n    checked,\n    disabled,\n    activeColor,\n    inactiveColor,\n    theme\n  );\n\n  /**\n   * get icon\n   * shows activity indication if loading state is true\n   */\n  const getIcon = () => {\n    if (loading) {\n      return (\n        <ActivityIndicator\n          size={getThemeProperty(theme.fontSize, fontSize)}\n          color={getThemeProperty(theme.colors, activeColor)}\n          style={{ zIndex: 2, position: 'relative' }}\n        />\n      );\n    }\n\n    if (checked) {\n      if (activeIcon && typeof activeIcon === 'string') {\n        return (\n          <Icon\n            name={activeIcon}\n            color={iconColor}\n            style={{ zIndex: 2, position: 'relative' }}\n            fontFamily=\"AntDesign\"\n            fontSize={fontSize}\n          />\n        );\n      }\n\n      if (activeIcon) {\n        return activeIcon;\n      }\n    } else {\n      if (inactiveIcon && typeof inactiveIcon === 'string') {\n        return (\n          <Icon\n            name={inactiveIcon}\n            color={iconColor}\n            style={{ zIndex: 2, position: 'relative' }}\n            fontFamily=\"AntDesign\"\n            fontSize={fontSize}\n          />\n        );\n      }\n\n      if (inactiveIcon) {\n        return inactiveIcon;\n      }\n    }\n\n    return (\n      <Icon\n        name={iconName}\n        color={iconColor}\n        style={{ zIndex: 2, position: 'relative' }}\n        fontFamily=\"MaterialIcons\"\n        fontSize={fontSize}\n      />\n    );\n  };\n\n  const renderChildren = () => {\n    if (isFunction(children)) {\n      return children({ focussed, disabled, checked, loading });\n    }\n\n    return (\n      <>\n        {prefix}\n        <RNView>\n          <RNView style={computedStyle.highlightContainer} />\n          <RNView style={computedStyle.icon}>{icon}</RNView>\n        </RNView>\n        {children}\n        {suffix}\n      </>\n    );\n  };\n\n  const icon = getIcon();\n\n  return (\n    <RNButton\n      {...rest}\n      style={computedStyle.button}\n      onPress={disabled ? undefined : onPress}\n      onPressIn={disabled ? undefined : onPressIn}\n      onPressOut={disabled ? undefined : onPressOut}\n    >\n      <RNView style={computedStyle.container}>{renderChildren()}</RNView>\n    </RNButton>\n  );\n};\n\nRadio.defaultProps = {\n  defaultChecked: false,\n  activeColor: 'blue600',\n  inactiveColor: 'gray500',\n  highlightBg: 'gray300',\n  bg: 'transparent',\n  p: 'none',\n  color: 'white',\n  rounded: 'circle',\n  loading: false,\n  disabled: false,\n  loaderSize: 'md',\n  loaderColor: 'gray400',\n  block: false,\n  position: 'relative',\n  shadowColor: 'gray800',\n  shadow: 0,\n  fontSize: '4xl',\n  borderless: true,\n  alignItems: 'center',\n  justifyContent: 'center',\n  alignSelf: 'flex-start',\n  onPress: () => {},\n  flexDir: 'row',\n};\n\n// passing RadioGroup as part of Radio\nRadio.Group = RadioGroup;\n\nexport { Radio };\n"]},"metadata":{},"sourceType":"script"}