{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CheckboxGroup = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _div = require(\"../div/div.component\");\n\nvar _jsxFileName = \"/Users/pawankumar/Sites/react-native-magnus/src/ui/checkbox/group.component.tsx\";\n\nvar CheckboxGroup = function CheckboxGroup(props) {\n  var _useState = (0, React.useState)(props.value || props.defaultValue || []),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var children = props.children,\n      onChangeProp = props.onChange,\n      propsValue = props.value,\n      rest = (0, _objectWithoutProperties2.default)(props, [\"children\", \"onChange\", \"value\"]);\n\n  var onChange = function onChange(optionValue) {\n    var optionIndex = value.indexOf(optionValue);\n    var newValue = (0, _toConsumableArray2.default)(value);\n\n    if (optionIndex === -1) {\n      newValue.push(optionValue);\n    } else {\n      newValue.splice(optionIndex, 1);\n    }\n\n    if (!('value' in props)) {\n      setValue(newValue);\n    }\n\n    if (onChangeProp) {\n      onChangeProp(newValue);\n    }\n  };\n\n  var renderChildren = function renderChildren() {\n    return React.Children.map(children, function (child) {\n      return React.cloneElement(child, {\n        onChange: onChange,\n        checked: value.indexOf(child.props.value) > -1\n      });\n    });\n  };\n\n  return React.createElement(_div.Div, (0, _extends2.default)({}, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 10\n    }\n  }), renderChildren());\n};\n\nexports.CheckboxGroup = CheckboxGroup;","map":{"version":3,"sources":["group.component.tsx"],"names":["CheckboxGroup","value","setValue","props","children","onChangeProp","propsValue","rest","onChange","optionIndex","newValue","renderChildren","React","checked","child"],"mappings":";;;;;;;;;;;;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAGA,IAAA,IAAA,GAAA,OAAA,wBAAA;;;;AAUA,IAAMA,aAAmD,GAAnDA,SAAAA,aAAAA,CAAsD,KAAtDA,EAAiE;AAAA,MAAA,SAAA,GAC3C,CAAA,GAAA,KAAA,CAAA,QAAA,EAASG,KAAK,CAALA,KAAAA,IAAeA,KAAK,CAApBA,YAAAA,IADkC,EAC3C,CAD2C;AAAA,MAAA,UAAA,GAAA,CAAA,GAAA,eAAA,CAAA,OAAA,EAAA,SAAA,EAAA,CAAA,CAAA;AAAA,MAC9DF,KAD8D,GAAA,UAAA,CAAA,CAAA,CAAA;AAAA,MACvDC,QADuD,GAAA,UAAA,CAAA,CAAA,CAAA;;AAAA,MAGnEE,QAHmE,GAOjED,KAPiE,CAAA,QAAA;AAAA,MAIzDE,YAJyD,GAOjEF,KAPiE,CAAA,QAAA;AAAA,MAK5DG,UAL4D,GAOjEH,KAPiE,CAAA,KAAA;AAAA,MAMhEI,IANgE,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,KAAA,EAAA,CAAA,UAAA,EAAA,UAAA,EAAA,OAAA,CAAA,CAAA;;AAerE,MAAMC,QAAQ,GAARA,SAAAA,QAAAA,CAAW,WAAXA,EAAiC;AACrC,QAAMC,WAAW,GAAGR,KAAK,CAALA,OAAAA,CAApB,WAAoBA,CAApB;AACA,QAAMS,QAAQ,GAAA,CAAA,GAAA,mBAAA,CAAA,OAAA,EAAd,KAAc,CAAd;;AAEA,QAAID,WAAW,KAAK,CAApB,CAAA,EAAwB;AACtBC,MAAAA,QAAQ,CAARA,IAAAA,CAAAA,WAAAA;AADF,KAAA,MAEO;AACLA,MAAAA,QAAQ,CAARA,MAAAA,CAAAA,WAAAA,EAAAA,CAAAA;AAGF;;AAAA,QAAI,EAAE,WAAN,KAAI,CAAJ,EAAyB;AACvBR,MAAAA,QAAQ,CAARA,QAAQ,CAARA;AAGF;;AAAA,QAAA,YAAA,EAAkB;AAChBG,MAAAA,YAAY,CAAZA,QAAY,CAAZA;AAEH;AAjBD,GAAA;;AAsBA,MAAMM,cAAc,GAAdA,SAAAA,cAAAA,GAAuB;AAC3B,WAAOC,KAAK,CAALA,QAAAA,CAAAA,GAAAA,CAAAA,QAAAA,EAA6B,UAAA,KAAA,EAA+B;AACjE,aAAOA,KAAK,CAALA,YAAAA,CAAAA,KAAAA,EAA0B;AAC/BJ,QAAAA,QAAQ,EADuB,QAAA;AAE/BK,QAAAA,OAAO,EAAEZ,KAAK,CAALA,OAAAA,CAAca,KAAK,CAALA,KAAAA,CAAdb,KAAAA,IAAmC,CAF9C;AAAiC,OAA1BW,CAAP;AADF,KAAOA,CAAP;AADF,GAAA;;AASA,SAAO,KAAA,CAAA,aAAA,CAAC,IAAA,CAAD,GAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,CAAA,EAAgBD,cAAvB,EAAO,CAAP;AA9CF,CAAA","sourcesContent":["import * as React from 'react';\nimport { useState } from 'react';\n\nimport { Div } from '../div/div.component';\nimport { DivProps } from '../div/div.type';\n\ninterface ButtonProps extends DivProps {\n  onChange?: (value: any) => void;\n  value?: any[];\n  defaultValue?: any[];\n  children: React.ReactElement[] | React.ReactElement;\n}\n\nconst CheckboxGroup: React.FunctionComponent<ButtonProps> = (props) => {\n  const [value, setValue] = useState(props.value || props.defaultValue || []);\n  const {\n    children,\n    onChange: onChangeProp,\n    value: propsValue,\n    ...rest\n  } = props;\n\n  /**\n   * checks if checked value is already in the state or not,\n   * if it, remove it else add it\n   *\n   * @param value\n   */\n  const onChange = (optionValue: any) => {\n    const optionIndex = value.indexOf(optionValue);\n    const newValue = [...value];\n\n    if (optionIndex === -1) {\n      newValue.push(optionValue);\n    } else {\n      newValue.splice(optionIndex, 1);\n    }\n\n    if (!('value' in props)) {\n      setValue(newValue);\n    }\n\n    if (onChangeProp) {\n      onChangeProp(newValue);\n    }\n  };\n\n  /**\n   * clones the children and add checked, onChange prop\n   */\n  const renderChildren = () => {\n    return React.Children.map(children, (child: React.ReactElement) => {\n      return React.cloneElement(child, {\n        onChange,\n        checked: value.indexOf(child.props.value) > -1,\n      });\n    });\n  };\n\n  return <Div {...rest}>{renderChildren()}</Div>;\n};\n\nexport { CheckboxGroup };\n"]},"metadata":{},"sourceType":"script"}