{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getStyle = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _theme = require(\"../../theme/theme.service\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar getStyle = function getStyle(theme, props) {\n  var computedStyle = {};\n  computedStyle.text = _objectSpread(_objectSpread(_objectSpread(_objectSpread({\n    height: props.h,\n    width: props.w,\n    minHeight: props.minH,\n    minWidth: props.minW,\n    maxHeight: props.maxH,\n    maxWidth: props.maxW,\n    flex: props.flex,\n    fontWeight: props.fontWeight,\n    textDecorationLine: props.textDecorLine,\n    textDecorationStyle: props.textDecorStyle,\n    letterSpacing: props.letterSpacing,\n    fontStyle: props.fontStyle,\n    textAlignVertical: props.textAlignVertical,\n    lineHeight: props.lineHeight ? props.lineHeight : 1.5 * (0, _theme.getThemeProperty)(theme.fontSize, props.fontSize),\n    color: (0, _theme.getThemeProperty)(theme.colors, props.color),\n    fontSize: (0, _theme.getThemeProperty)(theme.fontSize, props.fontSize),\n    backgroundColor: (0, _theme.getThemeProperty)(theme.colors, props.bg),\n    textAlign: props.textAlign,\n    textTransform: props.textTransform,\n    overflow: props.overflow,\n    opacity: props.opacity,\n    textDecorationColor: (0, _theme.getThemeProperty)(theme.colors, props.textDecorColor)\n  }, (0, _theme.createBorderWidthStyles)(props)), (0, _theme.createSpacingStyles)(props, theme.spacing)), (0, _theme.createBorderColorStyles)(props, theme.colors)), (0, _theme.createBorderRadiusStyles)(props, theme.borderRadius));\n\n  if (props.style) {\n    computedStyle.text = _objectSpread(_objectSpread({}, computedStyle.text), props.style);\n  }\n\n  return _reactNative.StyleSheet.create(computedStyle);\n};\n\nexports.getStyle = getStyle;","map":{"version":3,"sources":["text.style.tsx"],"names":["getStyle","computedStyle","height","props","width","minHeight","minWidth","maxHeight","maxWidth","flex","fontWeight","textDecorationLine","textDecorationStyle","letterSpacing","fontStyle","textAlignVertical","lineHeight","theme","color","fontSize","backgroundColor","textAlign","textTransform","overflow","opacity","textDecorationColor","StyleSheet"],"mappings":"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","sourcesContent":["import { StyleSheet } from 'react-native';\n\nimport {\n  getThemeProperty,\n  createSpacingStyles,\n  createBorderWidthStyles,\n  createBorderColorStyles,\n  createBorderRadiusStyles,\n} from '../../theme/theme.service';\n\n/**\n * computed style\n *\n * @param theme\n * @param props\n */\nexport const getStyle = (theme: any, props: any) => {\n  const computedStyle: any = {};\n\n  computedStyle.text = {\n    height: props.h,\n    width: props.w,\n    minHeight: props.minH,\n    minWidth: props.minW,\n    maxHeight: props.maxH,\n    maxWidth: props.maxW,\n    flex: props.flex,\n    fontWeight: props.fontWeight,\n    textDecorationLine: props.textDecorLine,\n    textDecorationStyle: props.textDecorStyle,\n    letterSpacing: props.letterSpacing,\n    fontStyle: props.fontStyle,\n    textAlignVertical: props.textAlignVertical,\n    lineHeight: props.lineHeight\n      ? props.lineHeight\n      : 1.5 * getThemeProperty(theme.fontSize, props.fontSize),\n    color: getThemeProperty(theme.colors, props.color),\n    fontSize: getThemeProperty(theme.fontSize, props.fontSize),\n    backgroundColor: getThemeProperty(theme.colors, props.bg),\n    textAlign: props.textAlign,\n    textTransform: props.textTransform,\n    overflow: props.overflow,\n    opacity: props.opacity,\n    textDecorationColor: getThemeProperty(theme.colors, props.textDecorColor),\n    ...createBorderWidthStyles(props),\n    ...createSpacingStyles(props, theme.spacing),\n    ...createBorderColorStyles(props, theme.colors),\n    ...createBorderRadiusStyles(props, theme.borderRadius),\n  };\n\n  // merging style props to computed style\n  if (props.style) {\n    computedStyle.text = {\n      ...computedStyle.text,\n      ...props.style,\n    };\n  }\n\n  return StyleSheet.create(computedStyle);\n};\n"]},"metadata":{},"sourceType":"script"}