{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Circle = exports.Box = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar Animatable = _interopRequireWildcard(require(\"react-native-animatable\"));\n\nvar _skeleton = require(\"./skeleton.style\");\n\nvar _theme = require(\"../../theme\");\n\nvar _jsxFileName = \"/Users/pawankumar/Sites/react-native-magnus/src/ui/skeleton/skeleton.component.tsx\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar Box = function Box(props) {\n  var m = props.m,\n      mt = props.mt,\n      mr = props.mr,\n      mb = props.mb,\n      ml = props.ml,\n      ms = props.ms,\n      p = props.p,\n      pr = props.pr,\n      pt = props.pt,\n      pb = props.pb,\n      pl = props.pl,\n      bg = props.bg,\n      h = props.h,\n      w = props.w,\n      flex = props.flex,\n      rounded = props.rounded,\n      roundedTop = props.roundedTop,\n      roundedRight = props.roundedRight,\n      roundedBottom = props.roundedBottom,\n      roundedLeft = props.roundedLeft,\n      rest = (0, _objectWithoutProperties2.default)(props, [\"m\", \"mt\", \"mr\", \"mb\", \"ml\", \"ms\", \"p\", \"pr\", \"pt\", \"pb\", \"pl\", \"bg\", \"h\", \"w\", \"flex\", \"rounded\", \"roundedTop\", \"roundedRight\", \"roundedBottom\", \"roundedLeft\"]);\n\n  var _useContext = (0, React.useContext)(_theme.ThemeContext),\n      theme = _useContext.theme;\n\n  var computedStyle = (0, _skeleton.getStyle)(theme, props);\n  Animatable.initializeRegistryWithDefinitions({\n    fade: {\n      0: {\n        opacity: 1\n      },\n      0.5: {\n        opacity: 0.3\n      },\n      1: {\n        opacity: 1\n      }\n    }\n  });\n  return React.createElement(Animatable.View, (0, _extends2.default)({\n    style: _objectSpread({}, computedStyle.container),\n    animation: \"fade\",\n    duration: 1000,\n    easing: \"linear\",\n    iterationCount: \"infinite\"\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }));\n};\n\nexports.Box = Box;\n\nvar Circle = function Circle(props) {\n  return React.createElement(Box, (0, _extends2.default)({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 10\n    }\n  }));\n};\n\nexports.Circle = Circle;\nBox.defaultProps = {\n  bg: 'gray400',\n  h: 15,\n  rounded: 'md'\n};\nCircle.defaultProps = {\n  bg: 'gray400',\n  h: 15,\n  w: 15,\n  rounded: 'circle'\n};","map":{"version":3,"sources":["skeleton.component.tsx"],"names":["Box","m","mt","mr","mb","ml","ms","p","pr","pt","pb","pl","bg","h","w","flex","rounded","roundedTop","roundedRight","roundedBottom","roundedLeft","rest","props","theme","ThemeContext","computedStyle","Animatable","fade","opacity","Circle"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useContext } from 'react';\nimport * as Animatable from 'react-native-animatable';\n\nimport { getStyle } from './skeleton.style';\nimport { ThemeContext } from '../../theme';\nimport { SkeletonProps } from './skeleton.type';\n\nconst Box: React.FunctionComponent<SkeletonProps> = (props) => {\n  const {\n    m,\n    mt,\n    mr,\n    mb,\n    ml,\n    ms,\n    p,\n    pr,\n    pt,\n    pb,\n    pl,\n    bg,\n    h,\n    w,\n    flex,\n    rounded,\n    roundedTop,\n    roundedRight,\n    roundedBottom,\n    roundedLeft,\n    ...rest\n  } = props;\n  const { theme } = useContext(ThemeContext);\n  const computedStyle = getStyle(theme, props);\n\n  Animatable.initializeRegistryWithDefinitions({\n    fade: {\n      0: {\n        opacity: 1,\n      },\n      0.5: {\n        opacity: 0.3,\n      },\n      1: {\n        opacity: 1,\n      },\n    },\n  });\n\n  return (\n    <Animatable.View\n      style={{ ...computedStyle.container }}\n      animation=\"fade\"\n      duration={1000}\n      easing=\"linear\"\n      iterationCount=\"infinite\"\n      {...rest}\n    />\n  );\n};\n\nconst Circle: React.FunctionComponent<SkeletonProps> = (props) => {\n  return <Box {...props} />;\n};\n\nBox.defaultProps = {\n  bg: 'gray400',\n  h: 15,\n  rounded: 'md',\n};\n\nCircle.defaultProps = {\n  bg: 'gray400',\n  h: 15,\n  w: 15,\n  rounded: 'circle',\n};\n\nexport { Box, Circle };\n"]},"metadata":{},"sourceType":"script"}