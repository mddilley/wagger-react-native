{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AvatarGroup = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _div = require(\"../div/div.component\");\n\nvar _theme = require(\"../../theme\");\n\nvar _jsxFileName = \"/Users/pawankumar/Sites/react-native-magnus/src/ui/avatar/avatar.group.component.tsx\";\n\nvar AvatarGroup = function AvatarGroup(props) {\n  var children = props.children,\n      ml = props.ml,\n      offset = props.offset,\n      rest = (0, _objectWithoutProperties2.default)(props, [\"children\", \"ml\", \"offset\"]);\n\n  var _useContext = (0, React.useContext)(_theme.ThemeContext),\n      theme = _useContext.theme;\n\n  var calculatedOffset = (0, _theme.getThemeProperty)(theme.spacing, offset);\n  var calculatedMarginLeft = (0, _theme.getThemeProperty)(theme.spacing, ml);\n  return React.createElement(_div.Div, (0, _extends2.default)({}, rest, {\n    ml: calculatedOffset + calculatedMarginLeft,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }), React.Children.map(children, function (child) {\n    return React.cloneElement(child, {\n      ml: -1 * calculatedOffset\n    });\n  }));\n};\n\nexports.AvatarGroup = AvatarGroup;\nAvatarGroup.defaultProps = {\n  row: true,\n  ml: 'none',\n  offset: 'md'\n};","map":{"version":3,"sources":["avatar.group.component.tsx"],"names":["AvatarGroup","children","ml","offset","rest","props","theme","ThemeContext","calculatedOffset","calculatedMarginLeft","React","row"],"mappings":";;;;;;;;;;;;;AAAA,IAAA,KAAA,GAAA,uBAAA,CAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAGA,IAAA,IAAA,GAAA,OAAA,wBAAA;;AAEA,IAAA,MAAA,GAAA,OAAA,eAAA;;;;AAEA,IAAMA,WAAsD,GAAtDA,SAAAA,WAAAA,CAAyD,KAAzDA,EAAoE;AAAA,MAChEC,QADgE,GAC9BI,KAD8B,CAAA,QAAA;AAAA,MACtDH,EADsD,GAC9BG,KAD8B,CAAA,EAAA;AAAA,MAClDF,MADkD,GAC9BE,KAD8B,CAAA,MAAA;AAAA,MACvCD,IADuC,GAAA,CAAA,GAAA,yBAAA,CAAA,OAAA,EAAA,KAAA,EAAA,CAAA,UAAA,EAAA,IAAA,EAAA,QAAA,CAAA,CAAA;;AAAA,MAAA,WAAA,GAEtD,CAAA,GAAA,KAAA,CAAA,UAAA,EAAWG,MAAAA,CAF2C,YAEtD,CAFsD;AAAA,MAEhED,KAFgE,GAAA,WAAA,CAAA,KAAA;;AAGxE,MAAME,gBAAgB,GAAG,CAAA,GAAA,MAAA,CAAA,gBAAA,EAAiBF,KAAK,CAAtB,OAAA,EAAzB,MAAyB,CAAzB;AACA,MAAMG,oBAAoB,GAAG,CAAA,GAAA,MAAA,CAAA,gBAAA,EAAiBH,KAAK,CAAtB,OAAA,EAA7B,EAA6B,CAA7B;AAEA,SACE,KAAA,CAAA,aAAA,CAAC,IAAA,CAAD,GAAA,EAAA,CAAA,GAAA,SAAA,CAAA,OAAA,EAAA,EAAA,EAAA,IAAA,EAAA;AAAe,IAAA,EAAE,EAAEE,gBAAgB,GAAnC,oBAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA,EAAA;AAAA,MAAA,YAAA,EAAA;AAAA;AAAA,GAAA,CAAA,EACGE,KAAK,CAALA,QAAAA,CAAAA,GAAAA,CAAAA,QAAAA,EAA6B,UAAA,KAAA,EAA+B;AAC3D,WAAOA,KAAK,CAALA,YAAAA,CAAAA,KAAAA,EAA0B;AAC/BR,MAAAA,EAAE,EAAE,CAAA,CAAA,GADN;AAAiC,KAA1BQ,CAAP;AAHN,GAEKA,CADH,CADF;AANF,CAAA;;;AAiBAV,WAAW,CAAXA,YAAAA,GAA2B;AACzBW,EAAAA,GAAG,EADsB,IAAA;AAEzBT,EAAAA,EAAE,EAFuB,MAAA;AAGzBC,EAAAA,MAAM,EAHRH;AAA2B,CAA3BA","sourcesContent":["import * as React from 'react';\n\nimport { useContext } from 'react';\nimport { Div } from '../div/div.component';\nimport { AvatarGroupProps } from './avatar.group.type';\nimport { ThemeContext, getThemeProperty } from '../../theme';\n\nconst AvatarGroup: React.FunctionComponent<AvatarGroupProps> = (props) => {\n  const { children, ml, offset, ...rest } = props;\n  const { theme } = useContext(ThemeContext);\n  const calculatedOffset = getThemeProperty(theme.spacing, offset);\n  const calculatedMarginLeft = getThemeProperty(theme.spacing, ml);\n\n  return (\n    <Div {...rest} ml={calculatedOffset + calculatedMarginLeft}>\n      {React.Children.map(children, (child: React.ReactElement) => {\n        return React.cloneElement(child, {\n          ml: -1 * calculatedOffset,\n        });\n      })}\n    </Div>\n  );\n};\n\nAvatarGroup.defaultProps = {\n  row: true,\n  ml: 'none',\n  offset: 'md',\n};\n\nexport { AvatarGroup };\n"]},"metadata":{},"sourceType":"script"}