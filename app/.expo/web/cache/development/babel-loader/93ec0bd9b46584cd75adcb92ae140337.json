{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Animated = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar Animatable = _interopRequireWildcard(require(\"react-native-animatable\"));\n\nvar _theme = require(\"../../theme\");\n\nvar _animated = require(\"./animated.style\");\n\nvar _animated2 = require(\"./animated.service\");\n\nvar _jsxFileName = \"/Users/pawankumar/Sites/react-native-magnus/src/ui/animated/animated.component.tsx\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\n(0, _animated2.registerAnimations)();\n\nvar Animated = function Animated(props) {\n  var h = props.h,\n      w = props.w,\n      m = props.m,\n      mt = props.mt,\n      mr = props.mr,\n      mb = props.mb,\n      ml = props.ml,\n      p = props.p,\n      pr = props.pr,\n      pt = props.pt,\n      pb = props.pb,\n      pl = props.pl,\n      minH = props.minH,\n      minW = props.minW,\n      position = props.position,\n      style = props.style,\n      flexDir = props.flexDir,\n      rounded = props.rounded,\n      roundedTop = props.roundedTop,\n      roundedRight = props.roundedRight,\n      roundedBottom = props.roundedBottom,\n      roundedLeft = props.roundedLeft,\n      children = props.children,\n      bgImg = props.bgImg,\n      duration = props.duration,\n      bgMode = props.bgMode,\n      animation = props.animation,\n      alignItems = props.alignItems,\n      justifyContent = props.justifyContent,\n      borderColor = props.borderColor,\n      borderBottomColor = props.borderBottomColor,\n      borderLeftColor = props.borderLeftColor,\n      borderTopColor = props.borderTopColor,\n      borderRightColor = props.borderRightColor,\n      borderWidth = props.borderWidth,\n      borderLeftWidth = props.borderLeftWidth,\n      borderRightWidth = props.borderRightWidth,\n      borderBottomWidth = props.borderBottomWidth,\n      borderTopWidth = props.borderTopWidth,\n      flexWrap = props.flexWrap,\n      shadow = props.shadow,\n      shadowColor = props.shadowColor,\n      rest = (0, _objectWithoutProperties2.default)(props, [\"h\", \"w\", \"m\", \"mt\", \"mr\", \"mb\", \"ml\", \"p\", \"pr\", \"pt\", \"pb\", \"pl\", \"minH\", \"minW\", \"position\", \"style\", \"flexDir\", \"rounded\", \"roundedTop\", \"roundedRight\", \"roundedBottom\", \"roundedLeft\", \"children\", \"bgImg\", \"duration\", \"bgMode\", \"animation\", \"alignItems\", \"justifyContent\", \"borderColor\", \"borderBottomColor\", \"borderLeftColor\", \"borderTopColor\", \"borderRightColor\", \"borderWidth\", \"borderLeftWidth\", \"borderRightWidth\", \"borderBottomWidth\", \"borderTopWidth\", \"flexWrap\", \"shadow\", \"shadowColor\"]);\n\n  var _useContext = (0, React.useContext)(_theme.ThemeContext),\n      theme = _useContext.theme;\n\n  var computedStyle = (0, _animated.getStyle)(theme, props);\n\n  if (bgImg) {\n    return React.createElement(_reactNative.ImageBackground, (0, _extends2.default)({\n      source: bgImg,\n      style: computedStyle.div,\n      resizeMode: props.bgMode,\n      imageStyle: computedStyle.image\n    }, rest, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }), children);\n  }\n\n  return React.createElement(Animatable.View, (0, _extends2.default)({\n    animation: \"magnus-\".concat(animation),\n    duration: duration,\n    easing: \"ease-in-out\",\n    iterationCount: 1,\n    style: _objectSpread({}, computedStyle.div)\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }), children);\n};\n\nexports.Animated = Animated;\nAnimated.defaultProps = {\n  bg: 'transparent',\n  flexWrap: 'nowrap',\n  rounded: 'none',\n  shadow: 'none',\n  shadowColor: 'gray900',\n  position: 'relative',\n  bgMode: 'cover',\n  animation: 'fromTop',\n  duration: 150,\n  delay: 0\n};","map":{"version":3,"sources":["animated.component.tsx"],"names":["Animated","h","w","m","mt","mr","mb","ml","p","pr","pt","pb","pl","minH","minW","position","style","flexDir","rounded","roundedTop","roundedRight","roundedBottom","roundedLeft","children","bgImg","duration","bgMode","animation","alignItems","justifyContent","borderColor","borderBottomColor","borderLeftColor","borderTopColor","borderRightColor","borderWidth","borderLeftWidth","borderRightWidth","borderBottomWidth","borderTopWidth","flexWrap","shadow","shadowColor","rest","props","theme","ThemeContext","computedStyle","bg","delay"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useContext } from 'react';\nimport { ImageBackground as RNImageBackground } from 'react-native';\nimport * as Animatable from 'react-native-animatable';\n\nimport { DivProps } from './animated.type';\nimport { ThemeContext } from '../../theme';\nimport { getStyle } from './animated.style';\nimport { registerAnimations } from './animated.service';\n\nregisterAnimations();\n\nconst Animated: React.FunctionComponent<DivProps> = (props: DivProps) => {\n  const {\n    h,\n    w,\n    m,\n    mt,\n    mr,\n    mb,\n    ml,\n    p,\n    pr,\n    pt,\n    pb,\n    pl,\n    minH,\n    minW,\n    position,\n    style,\n    flexDir,\n    rounded,\n    roundedTop,\n    roundedRight,\n    roundedBottom,\n    roundedLeft,\n    children,\n    bgImg,\n    duration,\n    bgMode,\n    animation,\n    alignItems,\n    justifyContent,\n    borderColor,\n    borderBottomColor,\n    borderLeftColor,\n    borderTopColor,\n    borderRightColor,\n    borderWidth,\n    borderLeftWidth,\n    borderRightWidth,\n    borderBottomWidth,\n    borderTopWidth,\n    flexWrap,\n    shadow,\n    shadowColor,\n    ...rest\n  } = props;\n\n  const { theme } = useContext(ThemeContext);\n  const computedStyle = getStyle(theme, props);\n\n  if (bgImg) {\n    return (\n      <RNImageBackground\n        source={bgImg}\n        style={computedStyle.div}\n        resizeMode={props.bgMode}\n        imageStyle={computedStyle.image}\n        {...rest}\n      >\n        {children}\n      </RNImageBackground>\n    );\n  }\n\n  return (\n    <Animatable.View\n      animation={`magnus-${animation}`}\n      duration={duration}\n      easing=\"ease-in-out\"\n      iterationCount={1}\n      style={{ ...computedStyle.div }}\n      {...rest}\n    >\n      {children}\n    </Animatable.View>\n  );\n};\n\nAnimated.defaultProps = {\n  bg: 'transparent',\n  flexWrap: 'nowrap',\n  rounded: 'none',\n  shadow: 'none',\n  shadowColor: 'gray900',\n  position: 'relative',\n  bgMode: 'cover',\n  animation: 'fromTop',\n  duration: 150,\n  delay: 0,\n};\n\nexport { Animated };\n"]},"metadata":{},"sourceType":"script"}