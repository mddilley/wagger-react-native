{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Input = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _input = require(\"./input.style\");\n\nvar _theme = require(\"../../theme\");\n\nvar _theme2 = require(\"../../theme/theme.service\");\n\nvar _jsxFileName = \"/Users/pawankumar/Sites/react-native-magnus/src/ui/input/input.component.tsx\";\nvar Input = React.forwardRef(function (props, ref) {\n  var h = props.h,\n      w = props.w,\n      m = props.m,\n      mt = props.mt,\n      mr = props.mr,\n      mb = props.mb,\n      ml = props.ml,\n      ms = props.ms,\n      p = props.p,\n      pr = props.pr,\n      pt = props.pt,\n      pb = props.pb,\n      pl = props.pl,\n      bg = props.bg,\n      minH = props.minH,\n      minW = props.minW,\n      colorProp = props.color,\n      suffix = props.suffix,\n      prefix = props.prefix,\n      style = props.style,\n      onBlur = props.onBlur,\n      loading = props.loading,\n      onFocus = props.onFocus,\n      rounded = props.rounded,\n      roundedTop = props.roundedTop,\n      roundedRight = props.roundedRight,\n      roundedBottom = props.roundedBottom,\n      roundedLeft = props.roundedLeft,\n      children = props.children,\n      loaderSize = props.loaderSize,\n      fontSize = props.fontSize,\n      borderColor = props.borderColor,\n      borderBottomColor = props.borderBottomColor,\n      borderLeftColor = props.borderLeftColor,\n      borderTopColor = props.borderTopColor,\n      borderRightColor = props.borderRightColor,\n      borderWidth = props.borderWidth,\n      borderLeftWidth = props.borderLeftWidth,\n      borderRightWidth = props.borderRightWidth,\n      borderBottomWidth = props.borderBottomWidth,\n      borderTopWidth = props.borderTopWidth,\n      borderEndWidth = props.borderEndWidth,\n      loaderColor = props.loaderColor,\n      focusBorderColor = props.focusBorderColor,\n      shadow = props.shadow,\n      flex = props.flex,\n      shadowColor = props.shadowColor,\n      zIndex = props.zIndex,\n      opacity = props.opacity,\n      placeholderTextColor = props.placeholderTextColor,\n      rest = (0, _objectWithoutProperties2.default)(props, [\"h\", \"w\", \"m\", \"mt\", \"mr\", \"mb\", \"ml\", \"ms\", \"p\", \"pr\", \"pt\", \"pb\", \"pl\", \"bg\", \"minH\", \"minW\", \"color\", \"suffix\", \"prefix\", \"style\", \"onBlur\", \"loading\", \"onFocus\", \"rounded\", \"roundedTop\", \"roundedRight\", \"roundedBottom\", \"roundedLeft\", \"children\", \"loaderSize\", \"fontSize\", \"borderColor\", \"borderBottomColor\", \"borderLeftColor\", \"borderTopColor\", \"borderRightColor\", \"borderWidth\", \"borderLeftWidth\", \"borderRightWidth\", \"borderBottomWidth\", \"borderTopWidth\", \"borderEndWidth\", \"loaderColor\", \"focusBorderColor\", \"shadow\", \"flex\", \"shadowColor\", \"zIndex\", \"opacity\", \"placeholderTextColor\"]);\n\n  var _useContext = (0, React.useContext)(_theme.ThemeContext),\n      theme = _useContext.theme;\n\n  var _useState = (0, React.useState)(false),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      isFocussed = _useState2[0],\n      setIsFocussed = _useState2[1];\n\n  var computedStyle = (0, _input.getStyle)(theme, props, {\n    isFocussed: isFocussed\n  });\n  var placeholderColor = placeholderTextColor ? (0, _color.default)((0, _theme2.getThemeProperty)(theme.colors, placeholderTextColor)).alpha(0.4).rgb().string() : (0, _color.default)((0, _theme2.getThemeProperty)(theme.colors, colorProp)).alpha(0.4).rgb().string();\n\n  var onFocusInput = function onFocusInput(e) {\n    setIsFocussed(true);\n\n    if (onFocus) {\n      onFocus(e);\n    }\n  };\n\n  var onBlurInput = function onBlurInput(e) {\n    setIsFocussed(false);\n\n    if (onBlur) {\n      onBlur(e);\n    }\n  };\n\n  return React.createElement(_reactNative.View, {\n    style: computedStyle.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, prefix && React.createElement(_reactNative.View, {\n    style: computedStyle.prefix,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 18\n    }\n  }, prefix), React.createElement(_reactNative.TextInput, (0, _extends2.default)({\n    ref: ref,\n    onFocus: function onFocus(e) {\n      return onFocusInput(e);\n    },\n    onBlur: function onBlur(e) {\n      return onBlurInput(e);\n    },\n    style: computedStyle.input\n  }, rest, {\n    placeholderTextColor: placeholderColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  })), !loading && suffix && React.createElement(_reactNative.View, {\n    style: computedStyle.suffix,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, suffix), loading && React.createElement(_reactNative.View, {\n    style: computedStyle.suffix,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, React.createElement(_reactNative.ActivityIndicator, {\n    size: (0, _theme2.getThemeProperty)(theme.fontSize, loaderSize),\n    color: (0, _theme2.getThemeProperty)(theme.colors, loaderColor),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  })));\n});\nexports.Input = Input;\nInput.defaultProps = {\n  p: 'md',\n  borderColor: 'gray200',\n  fontSize: 'md',\n  borderWidth: 1,\n  rounded: 'md',\n  loading: false,\n  color: 'gray800',\n  shadow: 0,\n  shadowColor: 'gray500',\n  loaderSize: 'md',\n  loaderColor: 'gray300'\n};","map":{"version":3,"sources":["input.component.tsx"],"names":["Input","React","h","w","m","mt","mr","mb","ml","ms","p","pr","pt","pb","pl","bg","minH","minW","colorProp","suffix","prefix","style","onBlur","loading","onFocus","rounded","roundedTop","roundedRight","roundedBottom","roundedLeft","children","loaderSize","fontSize","borderColor","borderBottomColor","borderLeftColor","borderTopColor","borderRightColor","borderWidth","borderLeftWidth","borderRightWidth","borderBottomWidth","borderTopWidth","borderEndWidth","loaderColor","focusBorderColor","shadow","flex","shadowColor","zIndex","opacity","placeholderTextColor","rest","props","theme","ThemeContext","isFocussed","setIsFocussed","computedStyle","placeholderColor","onFocusInput","onBlurInput","color"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport { useContext, useState } from 'react';\nimport {\n  View as RNView,\n  NativeSyntheticEvent,\n  TextInputFocusEventData,\n  TextInput as RNTextInput,\n  ActivityIndicator as RNActivityIndicator,\n} from 'react-native';\n\nimport { InputProps } from './input.type';\nimport { getStyle } from './input.style';\nimport { ThemeContext } from '../../theme';\nimport { getThemeProperty } from '../../theme/theme.service';\n\nconst Input = React.forwardRef<RNTextInput, InputProps>((props, ref) => {\n  const {\n    h,\n    w,\n    m,\n    mt,\n    mr,\n    mb,\n    ml,\n    ms,\n    p,\n    pr,\n    pt,\n    pb,\n    pl,\n    bg,\n    minH,\n    minW,\n    color: colorProp,\n    suffix,\n    prefix,\n    style,\n    onBlur,\n    loading,\n    onFocus,\n    rounded,\n    roundedTop,\n    roundedRight,\n    roundedBottom,\n    roundedLeft,\n    children,\n    loaderSize,\n    fontSize,\n    borderColor,\n    borderBottomColor,\n    borderLeftColor,\n    borderTopColor,\n    borderRightColor,\n    borderWidth,\n    borderLeftWidth,\n    borderRightWidth,\n    borderBottomWidth,\n    borderTopWidth,\n    borderEndWidth,\n    loaderColor,\n    focusBorderColor,\n    shadow,\n    flex,\n    shadowColor,\n    zIndex,\n    opacity,\n    placeholderTextColor,\n    ...rest\n  } = props;\n  const { theme } = useContext(ThemeContext);\n  const [isFocussed, setIsFocussed] = useState(false);\n  const computedStyle = getStyle(theme, props, { isFocussed });\n  const placeholderColor = placeholderTextColor\n    ? color(getThemeProperty(theme.colors, placeholderTextColor))\n        .alpha(0.4)\n        .rgb()\n        .string()\n    : color(getThemeProperty(theme.colors, colorProp))\n        .alpha(0.4)\n        .rgb()\n        .string();\n\n  /**\n   * on focus input\n   */\n  const onFocusInput = (e: NativeSyntheticEvent<TextInputFocusEventData>) => {\n    setIsFocussed(true);\n\n    if (onFocus) {\n      onFocus(e);\n    }\n  };\n\n  /**\n   * on blur input\n   * @param e\n   */\n  const onBlurInput = (e: NativeSyntheticEvent<TextInputFocusEventData>) => {\n    setIsFocussed(false);\n\n    if (onBlur) {\n      onBlur(e);\n    }\n  };\n\n  return (\n    <RNView style={computedStyle.container}>\n      {prefix && <RNView style={computedStyle.prefix}>{prefix}</RNView>}\n      <RNTextInput\n        ref={ref}\n        onFocus={(e) => onFocusInput(e)}\n        onBlur={(e) => onBlurInput(e)}\n        style={computedStyle.input}\n        {...rest}\n        placeholderTextColor={placeholderColor}\n      />\n      {!loading && suffix && (\n        <RNView style={computedStyle.suffix}>{suffix}</RNView>\n      )}\n      {loading && (\n        <RNView style={computedStyle.suffix}>\n          <RNActivityIndicator\n            size={getThemeProperty(theme.fontSize, loaderSize)}\n            color={getThemeProperty(theme.colors, loaderColor)}\n          />\n        </RNView>\n      )}\n    </RNView>\n  );\n});\n\nInput.defaultProps = {\n  p: 'md',\n  borderColor: 'gray200',\n  fontSize: 'md',\n  borderWidth: 1,\n  rounded: 'md',\n  loading: false,\n  color: 'gray800',\n  shadow: 0,\n  shadowColor: 'gray500',\n  loaderSize: 'md',\n  loaderColor: 'gray300',\n};\n\nexport { Input };\n"]},"metadata":{},"sourceType":"script"}