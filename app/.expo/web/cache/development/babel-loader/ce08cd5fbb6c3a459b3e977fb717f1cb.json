{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Button = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _color = _interopRequireDefault(require(\"color\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _button = require(\"./button.style\");\n\nvar _theme = require(\"../../theme\");\n\nvar _theme2 = require(\"../../theme/theme.service\");\n\nvar _jsxFileName = \"/Users/pawankumar/Sites/react-native-magnus/src/ui/button/button.component.tsx\";\n\nvar Button = function Button(props) {\n  var m = props.m,\n      mt = props.mt,\n      mr = props.mr,\n      mb = props.mb,\n      ml = props.ml,\n      ms = props.ms,\n      p = props.p,\n      pr = props.pr,\n      pt = props.pt,\n      pb = props.pb,\n      pl = props.pl,\n      h = props.h,\n      w = props.w,\n      bg = props.bg,\n      minW = props.minW,\n      minH = props.minH,\n      suffix = props.suffix,\n      style = props.style,\n      fontSize = props.fontSize,\n      fontWeight = props.fontWeight,\n      prefix = props.prefix,\n      rounded = props.rounded,\n      roundedTop = props.roundedTop,\n      roundedRight = props.roundedRight,\n      roundedBottom = props.roundedBottom,\n      roundedLeft = props.roundedLeft,\n      colorProp = props.color,\n      loading = props.loading,\n      disabled = props.disabled,\n      loaderColor = props.loaderColor,\n      loaderSize = props.loaderSize,\n      children = props.children,\n      borderColor = props.borderColor,\n      borderBottomColor = props.borderBottomColor,\n      borderLeftColor = props.borderLeftColor,\n      borderTopColor = props.borderTopColor,\n      borderRightColor = props.borderRightColor,\n      borderWidth = props.borderWidth,\n      borderLeftWidth = props.borderLeftWidth,\n      borderRightWidth = props.borderRightWidth,\n      borderBottomWidth = props.borderBottomWidth,\n      borderTopWidth = props.borderTopWidth,\n      borderEndWidth = props.borderEndWidth,\n      shadow = props.shadow,\n      borderless = props.borderless,\n      rippleColor = props.rippleColor,\n      shadowColor = props.shadowColor,\n      onPress = props.onPress,\n      block = props.block,\n      ripple = props.ripple,\n      alignSelf = props.alignSelf,\n      rest = (0, _objectWithoutProperties2.default)(props, [\"m\", \"mt\", \"mr\", \"mb\", \"ml\", \"ms\", \"p\", \"pr\", \"pt\", \"pb\", \"pl\", \"h\", \"w\", \"bg\", \"minW\", \"minH\", \"suffix\", \"style\", \"fontSize\", \"fontWeight\", \"prefix\", \"rounded\", \"roundedTop\", \"roundedRight\", \"roundedBottom\", \"roundedLeft\", \"color\", \"loading\", \"disabled\", \"loaderColor\", \"loaderSize\", \"children\", \"borderColor\", \"borderBottomColor\", \"borderLeftColor\", \"borderTopColor\", \"borderRightColor\", \"borderWidth\", \"borderLeftWidth\", \"borderRightWidth\", \"borderBottomWidth\", \"borderTopWidth\", \"borderEndWidth\", \"shadow\", \"borderless\", \"rippleColor\", \"shadowColor\", \"onPress\", \"block\", \"ripple\", \"alignSelf\"]);\n\n  var _useContext = (0, React.useContext)(_theme.ThemeContext),\n      theme = _useContext.theme;\n\n  var computedStyle = (0, _button.getStyle)(theme, props);\n  var underlayColor = (0, _theme2.getThemeProperty)(theme.colors, props.underlayColor ? props.underlayColor : (0, _color.default)((0, _theme2.getThemeProperty)(theme.colors, props.bg)).darken(0.1).rgb().string());\n  var calculatedRippleColor = (0, _color.default)((0, _theme2.getThemeProperty)(theme.colors, rippleColor)).alpha(disabled ? 0 : 0.2).rgb().string();\n\n  var renderChildren = function renderChildren() {\n    if (typeof children === 'string') {\n      return React.createElement(_reactNative.Text, {\n        style: computedStyle.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 14\n        }\n      }, children);\n    }\n\n    return children;\n  };\n\n  return React.createElement(_reactNative.Pressable, (0, _extends2.default)({}, rest, {\n    onPress: disabled || loading ? undefined : onPress,\n    style: function style(_ref) {\n      var pressed = _ref.pressed;\n      return [computedStyle.button, pressed && {\n        backgroundColor: underlayColor\n      }];\n    },\n    android_ripple: !ripple ? {\n      color: calculatedRippleColor,\n      borderless: borderless\n    } : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }), loading ? React.createElement(_reactNative.View, {\n    style: computedStyle.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, React.createElement(_reactNative.View, {\n    style: computedStyle.loadingContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, React.createElement(_reactNative.ActivityIndicator, {\n    size: (0, _theme2.getThemeProperty)(theme.fontSize, loaderSize),\n    color: (0, _theme2.getThemeProperty)(theme.colors, loaderColor),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }))) : React.createElement(_reactNative.Animated.View, {\n    style: computedStyle.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, prefix, renderChildren(), suffix));\n};\n\nexports.Button = Button;\nButton.defaultProps = {\n  bg: 'blue600',\n  p: 'md',\n  color: 'white',\n  rounded: 'md',\n  loading: false,\n  disabled: false,\n  loaderSize: 'md',\n  loaderColor: 'gray400',\n  block: false,\n  position: 'relative',\n  shadowColor: 'gray800',\n  shadow: 0,\n  fontSize: 'md',\n  rippleColor: 'white',\n  ripple: true,\n  borderless: false,\n  alignItems: 'center',\n  justifyContent: 'center',\n  alignSelf: 'flex-start',\n  onPress: function onPress() {},\n  flexDir: 'row'\n};","map":{"version":3,"sources":["button.component.tsx"],"names":["Button","m","mt","mr","mb","ml","ms","p","pr","pt","pb","pl","h","w","bg","minW","minH","suffix","style","fontSize","fontWeight","prefix","rounded","roundedTop","roundedRight","roundedBottom","roundedLeft","colorProp","loading","disabled","loaderColor","loaderSize","children","borderColor","borderBottomColor","borderLeftColor","borderTopColor","borderRightColor","borderWidth","borderLeftWidth","borderRightWidth","borderBottomWidth","borderTopWidth","borderEndWidth","shadow","borderless","rippleColor","shadowColor","onPress","block","ripple","alignSelf","rest","props","theme","ThemeContext","computedStyle","underlayColor","calculatedRippleColor","renderChildren","pressed","backgroundColor","color","position","alignItems","justifyContent","flexDir"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useContext } from 'react';\nimport color from 'color';\nimport {\n  Animated as RNAnimated,\n  Text as RNText,\n  View as RNView,\n  Pressable as RNButton,\n  ActivityIndicator as RNActivityIndicator,\n} from 'react-native';\n\nimport { getStyle } from './button.style';\nimport { ThemeContext } from '../../theme';\nimport { ButtonProps } from './button.type';\nimport { getThemeProperty } from '../../theme/theme.service';\n\nconst Button: React.FunctionComponent<ButtonProps> = (props) => {\n  const {\n    m,\n    mt,\n    mr,\n    mb,\n    ml,\n    ms,\n    p,\n    pr,\n    pt,\n    pb,\n    pl,\n    h,\n    w,\n    bg,\n    minW,\n    minH,\n    suffix,\n    style,\n    fontSize,\n    fontWeight,\n    prefix,\n    rounded,\n    roundedTop,\n    roundedRight,\n    roundedBottom,\n    roundedLeft,\n    color: colorProp,\n    loading,\n    disabled,\n    loaderColor,\n    loaderSize,\n    children,\n    borderColor,\n    borderBottomColor,\n    borderLeftColor,\n    borderTopColor,\n    borderRightColor,\n    borderWidth,\n    borderLeftWidth,\n    borderRightWidth,\n    borderBottomWidth,\n    borderTopWidth,\n    borderEndWidth,\n    shadow,\n    borderless,\n    rippleColor,\n    shadowColor,\n    onPress,\n    block,\n    ripple,\n    alignSelf,\n    ...rest\n  } = props;\n\n  const { theme } = useContext(ThemeContext);\n  const computedStyle = getStyle(theme, props);\n\n  const underlayColor = getThemeProperty(\n    theme.colors,\n    props.underlayColor\n      ? props.underlayColor\n      : color(getThemeProperty(theme.colors, props.bg))\n          .darken(0.1)\n          .rgb()\n          .string()\n  );\n\n  const calculatedRippleColor = color(\n    getThemeProperty(theme.colors, rippleColor)\n  )\n    .alpha(disabled ? 0 : 0.2)\n    .rgb()\n    .string();\n\n  /**\n   * renders children based on type\n   */\n  const renderChildren = () => {\n    if (typeof children === 'string') {\n      return <RNText style={computedStyle.text}>{children}</RNText>;\n    }\n\n    return children;\n  };\n\n  return (\n    <RNButton\n      {...rest}\n      onPress={disabled || loading ? undefined : onPress}\n      style={({ pressed }) => [\n        computedStyle.button,\n        pressed && { backgroundColor: underlayColor },\n      ]}\n      android_ripple={\n        !ripple\n          ? {\n              color: calculatedRippleColor,\n              borderless,\n            }\n          : null\n      }\n    >\n      {loading ? (\n        <RNView style={computedStyle.container}>\n          <RNView style={computedStyle.loadingContainer}>\n            <RNActivityIndicator\n              size={getThemeProperty(theme.fontSize, loaderSize)}\n              color={getThemeProperty(theme.colors, loaderColor)}\n            />\n          </RNView>\n        </RNView>\n      ) : (\n        <RNAnimated.View style={computedStyle.container}>\n          {prefix}\n          {renderChildren()}\n          {suffix}\n        </RNAnimated.View>\n      )}\n    </RNButton>\n  );\n};\n\nButton.defaultProps = {\n  bg: 'blue600',\n  p: 'md',\n  color: 'white',\n  rounded: 'md',\n  loading: false,\n  disabled: false,\n  loaderSize: 'md',\n  loaderColor: 'gray400',\n  block: false,\n  position: 'relative',\n  shadowColor: 'gray800',\n  shadow: 0,\n  fontSize: 'md',\n  rippleColor: 'white',\n  ripple: true,\n  borderless: false,\n  alignItems: 'center',\n  justifyContent: 'center',\n  alignSelf: 'flex-start',\n  onPress: () => {},\n  flexDir: 'row',\n};\n\nexport { Button };\n"]},"metadata":{},"sourceType":"script"}