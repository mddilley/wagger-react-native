{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getStyle = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _theme = require(\"../../theme/theme.service\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar getStyle = function getStyle(theme, props) {\n  var computedStyle = {};\n  computedStyle.div = _objectSpread(_objectSpread(_objectSpread(_objectSpread({\n    borderColor: (0, _theme.getThemeProperty)(theme.colors, props.borderColor),\n    borderWidth: props.borderWidth,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'row',\n    alignSelf: 'flex-start',\n    backgroundColor: (0, _theme.getThemeProperty)(theme.colors, props.bg)\n  }, (0, _theme.createBorderWidthStyles)(props)), (0, _theme.createSpacingStyles)(props, theme.spacing)), (0, _theme.createBorderColorStyles)(props, theme.colors)), (0, _theme.createBorderRadiusStyles)(props, theme.borderRadius));\n  computedStyle.text = {\n    color: (0, _theme.getThemeProperty)(theme.colors, props.color),\n    fontSize: (0, _theme.getThemeProperty)(theme.fontSize, props.fontSize),\n    textAlign: props.textAlign,\n    textTransform: props.textTransform,\n    textDecorationColor: (0, _theme.getThemeProperty)(theme.colors, props.textDecorColor)\n  };\n  computedStyle.prefix = {\n    marginRight: 4\n  };\n  computedStyle.suffix = {\n    marginLeft: 4\n  };\n\n  if (props.h) {\n    computedStyle.div = _objectSpread(_objectSpread({}, computedStyle.div), {}, {\n      height: props.h\n    });\n  }\n\n  if (props.flexDir) {\n    computedStyle.div = _objectSpread(_objectSpread({}, computedStyle.div), {}, {\n      flexDirection: props.flexDir\n    });\n  }\n\n  if (props.w) {\n    computedStyle.div = _objectSpread(_objectSpread({}, computedStyle.div), {}, {\n      width: props.w\n    });\n  }\n\n  if (props.minH) {\n    computedStyle.div = _objectSpread(_objectSpread({}, computedStyle.div), {}, {\n      minHeight: props.minH\n    });\n  }\n\n  if (props.minW) {\n    computedStyle.div = _objectSpread(_objectSpread({}, computedStyle.div), {}, {\n      minWidth: props.minW\n    });\n  }\n\n  if (props.style) {\n    computedStyle.div = _objectSpread(_objectSpread({}, computedStyle.div), props.style);\n  }\n\n  return _reactNative.StyleSheet.create(computedStyle);\n};\n\nexports.getStyle = getStyle;","map":{"version":3,"sources":["tag.style.tsx"],"names":["getStyle","computedStyle","borderColor","theme","props","borderWidth","justifyContent","alignItems","flexDirection","alignSelf","backgroundColor","color","fontSize","textAlign","textTransform","textDecorationColor","marginRight","marginLeft","height","width","minHeight","minWidth","StyleSheet"],"mappings":"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","sourcesContent":["import { StyleSheet } from 'react-native';\n\nimport {\n  getThemeProperty,\n  createSpacingStyles,\n  createBorderRadiusStyles,\n  createBorderColorStyles,\n  createBorderWidthStyles,\n} from '../../theme/theme.service';\n\n/**\n * computed style\n *\n * @param theme\n * @param props\n */\nexport const getStyle = (theme: any, props: any) => {\n  const computedStyle: any = {};\n\n  computedStyle.div = {\n    borderColor: getThemeProperty(theme.colors, props.borderColor),\n    borderWidth: props.borderWidth,\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'row',\n    alignSelf: 'flex-start',\n    backgroundColor: getThemeProperty(theme.colors, props.bg),\n    ...createBorderWidthStyles(props),\n    ...createSpacingStyles(props, theme.spacing),\n    ...createBorderColorStyles(props, theme.colors),\n    ...createBorderRadiusStyles(props, theme.borderRadius),\n  };\n\n  computedStyle.text = {\n    color: getThemeProperty(theme.colors, props.color),\n    fontSize: getThemeProperty(theme.fontSize, props.fontSize),\n    textAlign: props.textAlign,\n    textTransform: props.textTransform,\n    textDecorationColor: getThemeProperty(theme.colors, props.textDecorColor),\n  };\n\n  computedStyle.prefix = {\n    marginRight: 4,\n  };\n\n  computedStyle.suffix = {\n    marginLeft: 4,\n  };\n\n  if (props.h) {\n    computedStyle.div = {\n      ...computedStyle.div,\n      height: props.h,\n    };\n  }\n\n  if (props.flexDir) {\n    computedStyle.div = {\n      ...computedStyle.div,\n      flexDirection: props.flexDir,\n    };\n  }\n\n  if (props.w) {\n    computedStyle.div = {\n      ...computedStyle.div,\n      width: props.w,\n    };\n  }\n\n  if (props.minH) {\n    computedStyle.div = {\n      ...computedStyle.div,\n      minHeight: props.minH,\n    };\n  }\n\n  if (props.minW) {\n    computedStyle.div = {\n      ...computedStyle.div,\n      minWidth: props.minW,\n    };\n  }\n\n  // merging style props to computed style\n  if (props.style) {\n    computedStyle.div = {\n      ...computedStyle.div,\n      ...props.style,\n    };\n  }\n\n  return StyleSheet.create(computedStyle);\n};\n"]},"metadata":{},"sourceType":"script"}