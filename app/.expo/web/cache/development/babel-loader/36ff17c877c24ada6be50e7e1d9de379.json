{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ScrollDiv = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _scrolldiv = require(\"./scrolldiv.style\");\n\nvar _theme = require(\"../../theme\");\n\nvar _jsxFileName = \"/Users/pawankumar/Sites/react-native-magnus/src/ui/scrolldiv/scrolldiv.component.tsx\";\n\nvar ScrollDiv = function ScrollDiv(props) {\n  var h = props.h,\n      w = props.w,\n      m = props.m,\n      mt = props.mt,\n      mr = props.mr,\n      mb = props.mb,\n      ml = props.ml,\n      p = props.p,\n      pr = props.pr,\n      pt = props.pt,\n      pb = props.pb,\n      pl = props.pl,\n      minH = props.minH,\n      minW = props.minW,\n      position = props.position,\n      style = props.style,\n      flexDir = props.flexDir,\n      rounded = props.rounded,\n      roundedTop = props.roundedTop,\n      roundedRight = props.roundedRight,\n      roundedBottom = props.roundedBottom,\n      roundedLeft = props.roundedLeft,\n      children = props.children,\n      bgImg = props.bgImg,\n      bgMode = props.bgMode,\n      alignItems = props.alignItems,\n      justifyContent = props.justifyContent,\n      borderColor = props.borderColor,\n      borderBottomColor = props.borderBottomColor,\n      borderLeftColor = props.borderLeftColor,\n      borderTopColor = props.borderTopColor,\n      borderRightColor = props.borderRightColor,\n      borderWidth = props.borderWidth,\n      borderLeftWidth = props.borderLeftWidth,\n      borderRightWidth = props.borderRightWidth,\n      borderBottomWidth = props.borderBottomWidth,\n      borderTopWidth = props.borderTopWidth,\n      flexWrap = props.flexWrap,\n      shadow = props.shadow,\n      shadowColor = props.shadowColor,\n      rest = (0, _objectWithoutProperties2.default)(props, [\"h\", \"w\", \"m\", \"mt\", \"mr\", \"mb\", \"ml\", \"p\", \"pr\", \"pt\", \"pb\", \"pl\", \"minH\", \"minW\", \"position\", \"style\", \"flexDir\", \"rounded\", \"roundedTop\", \"roundedRight\", \"roundedBottom\", \"roundedLeft\", \"children\", \"bgImg\", \"bgMode\", \"alignItems\", \"justifyContent\", \"borderColor\", \"borderBottomColor\", \"borderLeftColor\", \"borderTopColor\", \"borderRightColor\", \"borderWidth\", \"borderLeftWidth\", \"borderRightWidth\", \"borderBottomWidth\", \"borderTopWidth\", \"flexWrap\", \"shadow\", \"shadowColor\"]);\n\n  var _useContext = (0, React.useContext)(_theme.ThemeContext),\n      theme = _useContext.theme;\n\n  var computedStyle = (0, _scrolldiv.getStyle)(theme, props);\n\n  if (bgImg) {\n    return React.createElement(_reactNative.ImageBackground, (0, _extends2.default)({\n      source: bgImg,\n      style: computedStyle.div,\n      resizeMode: props.bgMode,\n      imageStyle: computedStyle.image\n    }, rest, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }), children);\n  }\n\n  return React.createElement(_reactNative.ScrollView, (0, _extends2.default)({\n    style: computedStyle.div\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }), children);\n};\n\nexports.ScrollDiv = ScrollDiv;\nScrollDiv.defaultProps = {\n  bg: 'transparent',\n  flexDir: 'column',\n  flexWrap: 'nowrap',\n  rounded: 'none',\n  shadow: 0,\n  shadowColor: 'gray900',\n  position: 'relative',\n  bgMode: 'cover'\n};","map":{"version":3,"sources":["scrolldiv.component.tsx"],"names":["ScrollDiv","h","w","m","mt","mr","mb","ml","p","pr","pt","pb","pl","minH","minW","position","style","flexDir","rounded","roundedTop","roundedRight","roundedBottom","roundedLeft","children","bgImg","bgMode","alignItems","justifyContent","borderColor","borderBottomColor","borderLeftColor","borderTopColor","borderRightColor","borderWidth","borderLeftWidth","borderRightWidth","borderBottomWidth","borderTopWidth","flexWrap","shadow","shadowColor","rest","props","theme","ThemeContext","computedStyle","bg"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useContext } from 'react';\nimport {\n  ScrollView as RNScrollView,\n  ImageBackground as RNImageBackground,\n} from 'react-native';\n\nimport { ScrollDivProps } from './scrolldiv.type';\nimport { getStyle } from './scrolldiv.style';\nimport { ThemeContext } from '../../theme';\n\nconst ScrollDiv: React.FunctionComponent<ScrollDivProps> = (\n  props: ScrollDivProps\n) => {\n  const {\n    h,\n    w,\n    m,\n    mt,\n    mr,\n    mb,\n    ml,\n    p,\n    pr,\n    pt,\n    pb,\n    pl,\n    minH,\n    minW,\n    position,\n    style,\n    flexDir,\n    rounded,\n    roundedTop,\n    roundedRight,\n    roundedBottom,\n    roundedLeft,\n    children,\n    bgImg,\n    bgMode,\n    alignItems,\n    justifyContent,\n    borderColor,\n    borderBottomColor,\n    borderLeftColor,\n    borderTopColor,\n    borderRightColor,\n    borderWidth,\n    borderLeftWidth,\n    borderRightWidth,\n    borderBottomWidth,\n    borderTopWidth,\n    flexWrap,\n    shadow,\n    shadowColor,\n    ...rest\n  } = props;\n  const { theme } = useContext(ThemeContext);\n  const computedStyle = getStyle(theme, props);\n\n  if (bgImg) {\n    return (\n      <RNImageBackground\n        source={bgImg}\n        style={computedStyle.div}\n        resizeMode={props.bgMode}\n        imageStyle={computedStyle.image}\n        {...rest}\n      >\n        {children}\n      </RNImageBackground>\n    );\n  }\n\n  return (\n    <RNScrollView style={computedStyle.div} {...rest}>\n      {children}\n    </RNScrollView>\n  );\n};\n\nScrollDiv.defaultProps = {\n  bg: 'transparent',\n  flexDir: 'column',\n  flexWrap: 'nowrap',\n  rounded: 'none',\n  shadow: 0,\n  shadowColor: 'gray900',\n  position: 'relative',\n  bgMode: 'cover',\n};\n\nexport { ScrollDiv };\n"]},"metadata":{},"sourceType":"script"}