{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Badge = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native-web/dist/index\");\n\nvar _badge = require(\"./badge.style\");\n\nvar _theme = require(\"../../theme\");\n\nvar _jsxFileName = \"/Users/pawankumar/Sites/react-native-magnus/src/ui/badge/badge.component.tsx\";\n\nvar Badge = function Badge(props) {\n  var h = props.h,\n      w = props.w,\n      m = props.m,\n      mt = props.mt,\n      mr = props.mr,\n      bg = props.bg,\n      mb = props.mb,\n      ml = props.ml,\n      ms = props.ms,\n      p = props.p,\n      pr = props.pr,\n      pt = props.pt,\n      pb = props.pb,\n      pl = props.pl,\n      minH = props.minH,\n      minW = props.minW,\n      style = props.style,\n      shadow = props.shadow,\n      rounded = props.rounded,\n      position = props.position,\n      roundedTop = props.roundedTop,\n      roundedRight = props.roundedRight,\n      roundedBottom = props.roundedBottom,\n      roundedLeft = props.roundedLeft,\n      alignItems = props.alignItems,\n      fontSize = props.fontSize,\n      justifyContent = props.justifyContent,\n      borderColor = props.borderColor,\n      borderBottomColor = props.borderBottomColor,\n      borderLeftColor = props.borderLeftColor,\n      borderTopColor = props.borderTopColor,\n      borderRightColor = props.borderRightColor,\n      borderWidth = props.borderWidth,\n      borderLeftWidth = props.borderLeftWidth,\n      borderRightWidth = props.borderRightWidth,\n      borderEndWidth = props.borderEndWidth,\n      shadowColor = props.shadowColor,\n      children = props.children,\n      right = props.right,\n      top = props.top,\n      left = props.left,\n      bottom = props.bottom,\n      color = props.color,\n      count = props.count,\n      opacity = props.opacity,\n      rest = (0, _objectWithoutProperties2.default)(props, [\"h\", \"w\", \"m\", \"mt\", \"mr\", \"bg\", \"mb\", \"ml\", \"ms\", \"p\", \"pr\", \"pt\", \"pb\", \"pl\", \"minH\", \"minW\", \"style\", \"shadow\", \"rounded\", \"position\", \"roundedTop\", \"roundedRight\", \"roundedBottom\", \"roundedLeft\", \"alignItems\", \"fontSize\", \"justifyContent\", \"borderColor\", \"borderBottomColor\", \"borderLeftColor\", \"borderTopColor\", \"borderRightColor\", \"borderWidth\", \"borderLeftWidth\", \"borderRightWidth\", \"borderEndWidth\", \"shadowColor\", \"children\", \"right\", \"top\", \"left\", \"bottom\", \"color\", \"count\", \"opacity\"]);\n\n  var _useContext = (0, React.useContext)(_theme.ThemeContext),\n      theme = _useContext.theme;\n\n  var computedStyle = (0, _badge.getStyle)(theme, props);\n  return React.createElement(_reactNative.View, {\n    style: computedStyle.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, React.createElement(_reactNative.View, {\n    style: {\n      alignSelf: 'flex-start'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, typeof children !== 'string' && children, React.createElement(_reactNative.View, (0, _extends2.default)({\n    style: computedStyle.div\n  }, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), typeof children === 'string' && React.createElement(_reactNative.Text, {\n    style: computedStyle.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, children))));\n};\n\nexports.Badge = Badge;\nBadge.defaultProps = {\n  bg: 'green700',\n  rounded: 'circle',\n  shadow: 0,\n  color: 'white',\n  top: 0,\n  right: 0,\n  shadowColor: 'gray900',\n  position: 'relative',\n  fontSize: 'sm'\n};","map":{"version":3,"sources":["badge.component.tsx"],"names":["Badge","h","w","m","mt","mr","bg","mb","ml","ms","p","pr","pt","pb","pl","minH","minW","style","shadow","rounded","position","roundedTop","roundedRight","roundedBottom","roundedLeft","alignItems","fontSize","justifyContent","borderColor","borderBottomColor","borderLeftColor","borderTopColor","borderRightColor","borderWidth","borderLeftWidth","borderRightWidth","borderEndWidth","shadowColor","children","right","top","left","bottom","color","count","opacity","rest","props","theme","ThemeContext","computedStyle","alignSelf"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useContext } from 'react';\nimport { View as RNView, Text as RNText } from 'react-native';\n\nimport { BadgeProps } from './badge.type';\nimport { getStyle } from './badge.style';\nimport { ThemeContext } from '../../theme';\n\nconst Badge: React.FunctionComponent<BadgeProps> = (props: BadgeProps) => {\n  const {\n    h,\n    w,\n    m,\n    mt,\n    mr,\n    bg,\n    mb,\n    ml,\n    ms,\n    p,\n    pr,\n    pt,\n    pb,\n    pl,\n    minH,\n    minW,\n    style,\n    shadow,\n    rounded,\n    position,\n    roundedTop,\n    roundedRight,\n    roundedBottom,\n    roundedLeft,\n    alignItems,\n    fontSize,\n    justifyContent,\n    borderColor,\n    borderBottomColor,\n    borderLeftColor,\n    borderTopColor,\n    borderRightColor,\n    borderWidth,\n    borderLeftWidth,\n    borderRightWidth,\n    borderEndWidth,\n    shadowColor,\n    children,\n    right,\n    top,\n    left,\n    bottom,\n    color,\n    count,\n    opacity,\n    ...rest\n  } = props;\n  const { theme } = useContext(ThemeContext);\n  const computedStyle = getStyle(theme, props);\n\n  return (\n    <RNView style={computedStyle.container}>\n      <RNView style={{ alignSelf: 'flex-start' }}>\n        {typeof children !== 'string' && children}\n        <RNView style={computedStyle.div} {...rest}>\n          {typeof children === 'string' && (\n            <RNText style={computedStyle.text}>{children}</RNText>\n          )}\n        </RNView>\n      </RNView>\n    </RNView>\n  );\n};\n\nBadge.defaultProps = {\n  bg: 'green700',\n  rounded: 'circle',\n  shadow: 0,\n  color: 'white',\n  top: 0,\n  right: 0,\n  shadowColor: 'gray900',\n  position: 'relative',\n  fontSize: 'sm',\n};\n\nexport { Badge };\n"]},"metadata":{},"sourceType":"script"}