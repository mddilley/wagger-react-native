{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.computeTheme = computeTheme;\nexports.createPositionStyle = exports.addPropToComputedStyle = exports.createStyle = exports.createShadowStyles = exports.createBorderColorStyles = exports.createBorderWidthStyles = exports.createFlexStyles = exports.createBorderRadiusStyles = exports.getThemeProperty = exports.createDirectionalStyles = exports.createSpacingStyles = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _style = require(\"../style\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction computeTheme(customTheme) {\n  var computedTheme = _objectSpread({}, _style.defaultTheme);\n\n  if (!customTheme) {\n    return computedTheme;\n  }\n\n  if (customTheme.colors) {\n    computedTheme.colors = _objectSpread(_objectSpread({}, _style.defaultTheme.colors), customTheme.colors);\n  }\n\n  if (customTheme.fontSize) {\n    computedTheme.fontSize = _objectSpread(_objectSpread({}, _style.defaultTheme.fontSize), customTheme.fontSize);\n  }\n\n  if (customTheme.borderRadius) {\n    computedTheme.borderRadius = _objectSpread(_objectSpread({}, _style.defaultTheme.borderRadius), customTheme.borderRadius);\n  }\n\n  if (customTheme.name) {\n    computedTheme.name = customTheme.name;\n  }\n\n  return computedTheme;\n}\n\nvar createSpacingStyles = function createSpacingStyles(props, theme) {\n  var propKeys;\n  propKeys = {\n    p: 'padding',\n    pt: 'paddingTop',\n    pr: 'paddingRight',\n    pb: 'paddingBottom',\n    pl: 'paddingLeft',\n    px: 'paddingHorizontal',\n    py: 'paddingVertical',\n    m: 'margin',\n    mt: 'marginTop',\n    mr: 'marginRight',\n    mb: 'marginBottom',\n    ml: 'marginLeft',\n    mx: 'marginHorizontal',\n    my: 'marginVertical',\n    ms: 'marginStart'\n  };\n  var computedStyle = {};\n  Object.keys(propKeys).map(function (propKey) {\n    var styleProperty = propKeys[propKey];\n\n    if (propKey in props) {\n      computedStyle[styleProperty] = getThemeProperty(theme, props[propKey]);\n    }\n  });\n  return computedStyle;\n};\n\nexports.createSpacingStyles = createSpacingStyles;\n\nvar createDirectionalStyles = function createDirectionalStyles(key, value) {\n  var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'string';\n\n  if (typeof (value.x || value.y || value.b || value.t || value.l || value.r) === 'undefined') {\n    return createStyle(\"\".concat(key), value, type);\n  }\n\n  var computedStyle = {};\n\n  if (typeof value.x !== 'undefined') {\n    computedStyle = _objectSpread(_objectSpread({}, computedStyle), createStyle(\"\".concat(key, \"Horizontal\"), value.x, type));\n  }\n\n  if (typeof value.y !== 'undefined') {\n    computedStyle = _objectSpread(_objectSpread({}, computedStyle), createStyle(\"\".concat(key, \"Vertical\"), value.y, type));\n  }\n\n  if (typeof value.t !== 'undefined') {\n    computedStyle = _objectSpread(_objectSpread({}, computedStyle), createStyle(\"\".concat(key, \"Top\"), value.t, type));\n  }\n\n  if (typeof value.r !== 'undefined') {\n    computedStyle = _objectSpread(_objectSpread({}, computedStyle), createStyle(\"\".concat(key, \"Right\"), value.r, type));\n  }\n\n  if (typeof value.b !== 'undefined') {\n    computedStyle = _objectSpread(_objectSpread({}, computedStyle), createStyle(\"\".concat(key, \"Bottom\"), value.b, type));\n  }\n\n  if (typeof value.l !== 'undefined') {\n    computedStyle = _objectSpread(_objectSpread({}, computedStyle), createStyle(\"\".concat(key, \"Left\"), value.l, type));\n  }\n\n  return computedStyle;\n};\n\nexports.createDirectionalStyles = createDirectionalStyles;\n\nvar getThemeProperty = function getThemeProperty(theme, value) {\n  if (typeof theme[value] !== 'undefined') {\n    return theme[value];\n  }\n\n  return value;\n};\n\nexports.getThemeProperty = getThemeProperty;\n\nvar createBorderRadiusStyles = function createBorderRadiusStyles(props, theme) {\n  var propKeys;\n  propKeys = {\n    rounded: 'borderRadius',\n    roundedTopLeft: 'borderTopLeftRadius',\n    roundedTopRight: 'borderTopRightRadius',\n    roundedBottomLeft: 'borderBottomLeftRadius',\n    roundedBottomRight: 'borderBottomRightRadius',\n    roundedTop: ['borderTopLeftRadius', 'borderTopRightRadius'],\n    roundedLeft: ['borderTopLeftRadius', 'borderBottomLeftRadius'],\n    roundedRight: ['borderTopRightRadius', 'borderBottomRightRadius'],\n    roundedBottom: ['borderBottomLeftRadius', 'borderBottomRightRadius']\n  };\n  var computedStyle = {};\n  Object.keys(propKeys).map(function (propKey) {\n    var styleProperty = propKeys[propKey];\n\n    if (propKey in props) {\n      if (styleProperty instanceof Array) {\n        styleProperty.forEach(function (property) {\n          computedStyle[property] = getThemeProperty(theme, props[propKey]);\n        });\n      } else {\n        computedStyle[styleProperty] = getThemeProperty(theme, props[propKey]);\n      }\n    }\n  });\n  return computedStyle;\n};\n\nexports.createBorderRadiusStyles = createBorderRadiusStyles;\n\nvar createFlexStyles = function createFlexStyles(props) {\n  var propKeys;\n  propKeys = {\n    flex: 'flex'\n  };\n  var computedStyle = {};\n  Object.keys(propKeys).map(function (propKey) {\n    var styleProperty = propKeys[propKey];\n\n    if (propKey in props) {\n      computedStyle[styleProperty] = props[propKey];\n    }\n  });\n  return computedStyle;\n};\n\nexports.createFlexStyles = createFlexStyles;\n\nvar createBorderWidthStyles = function createBorderWidthStyles(props) {\n  var propKeys;\n  propKeys = {\n    borderWidth: 'borderWidth',\n    borderTopWidth: 'borderTopWidth',\n    borderEndWidth: 'borderEndWidth',\n    borderLeftWidth: 'borderLeftWidth',\n    borderRightWidth: 'borderRightWidth',\n    borderBottomWidth: 'borderBottomWidth'\n  };\n  var computedStyle = {};\n  Object.keys(propKeys).map(function (propKey) {\n    var styleProperty = propKeys[propKey];\n\n    if (propKey in props) {\n      computedStyle[styleProperty] = props[propKey];\n    }\n  });\n  return computedStyle;\n};\n\nexports.createBorderWidthStyles = createBorderWidthStyles;\n\nvar createBorderColorStyles = function createBorderColorStyles(props, theme) {\n  var propKeys;\n  propKeys = {\n    borderColor: 'borderColor',\n    borderTopColor: 'borderTopColor',\n    borderRightColor: 'borderTopColor',\n    borderLeftColor: 'borderLeftColor',\n    borderBottomColor: 'borderBottomColor'\n  };\n  var computedStyle = {};\n  Object.keys(propKeys).map(function (propKey) {\n    var styleProperty = propKeys[propKey];\n\n    if (propKey in props) {\n      if (styleProperty instanceof Array) {\n        styleProperty.forEach(function (property) {\n          computedStyle[property] = getThemeProperty(theme, props[propKey]);\n        });\n      } else {\n        computedStyle[styleProperty] = getThemeProperty(theme, props[propKey]);\n      }\n    }\n  });\n  return computedStyle;\n};\n\nexports.createBorderColorStyles = createBorderColorStyles;\n\nvar createShadowStyles = function createShadowStyles(props, theme) {\n  var computedStyle = {};\n\n  if (props.shadow) {\n    computedStyle = _objectSpread(_objectSpread({}, theme.shadow[props.shadow]), {}, {\n      shadowColor: getThemeProperty(theme.colors, props.shadowColor)\n    });\n  }\n\n  return computedStyle;\n};\n\nexports.createShadowStyles = createShadowStyles;\n\nvar createStyle = function createStyle(key, value, type) {\n  return (0, _defineProperty2.default)({}, key, type === 'number' ? Number(value) : value);\n};\n\nexports.createStyle = createStyle;\n\nvar addPropToComputedStyle = function addPropToComputedStyle(props, computedStyle, styleProperty, atomicProperty, type) {\n  if (props[atomicProperty]) {\n    computedStyle = _objectSpread(_objectSpread({}, computedStyle), createStyle(styleProperty, props[atomicProperty], type));\n  }\n\n  return computedStyle;\n};\n\nexports.addPropToComputedStyle = addPropToComputedStyle;\n\nvar createPositionStyle = function createPositionStyle(props) {\n  var propKeys;\n  propKeys = {\n    position: 'position',\n    top: 'top',\n    left: 'left',\n    right: 'right',\n    bottom: 'bottom'\n  };\n  var computedStyle = {};\n  Object.keys(propKeys).map(function (propKey) {\n    var styleProperty = propKeys[propKey];\n\n    if (propKey in props) {\n      computedStyle[styleProperty] = props[propKey];\n    }\n  });\n  return computedStyle;\n};\n\nexports.createPositionStyle = createPositionStyle;","map":{"version":3,"sources":["theme.service.ts"],"names":["computedTheme","defaultTheme","customTheme","createSpacingStyles","propKeys","p","pt","pr","pb","pl","px","py","m","mt","mr","mb","ml","mx","my","ms","computedStyle","Object","styleProperty","propKey","getThemeProperty","props","createDirectionalStyles","type","value","createStyle","theme","createBorderRadiusStyles","rounded","roundedTopLeft","roundedTopRight","roundedBottomLeft","roundedBottomRight","roundedTop","roundedLeft","roundedRight","roundedBottom","createFlexStyles","flex","createBorderWidthStyles","borderWidth","borderTopWidth","borderEndWidth","borderLeftWidth","borderRightWidth","borderBottomWidth","createBorderColorStyles","borderColor","borderTopColor","borderRightColor","borderLeftColor","borderBottomColor","createShadowStyles","shadowColor","Number","addPropToComputedStyle","createPositionStyle","position","top","left","right","bottom"],"mappings":"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","sourcesContent":["import { ThemeType } from './type';\nimport { defaultTheme } from '../style';\n\n/**\n * merge user theme with default theme\n *\n * @param customTheme\n *\n * @return computedTheme computed theme variables object\n */\nexport function computeTheme(customTheme: ThemeType | undefined): ThemeType {\n  const computedTheme = { ...defaultTheme };\n\n  if (!customTheme) {\n    return computedTheme;\n  }\n\n  if (customTheme.colors) {\n    computedTheme.colors = {\n      ...defaultTheme.colors,\n      ...customTheme.colors,\n    };\n  }\n\n  if (customTheme.fontSize) {\n    computedTheme.fontSize = {\n      ...defaultTheme.fontSize,\n      ...customTheme.fontSize,\n    };\n  }\n\n  if (customTheme.borderRadius) {\n    computedTheme.borderRadius = {\n      ...defaultTheme.borderRadius,\n      ...customTheme.borderRadius,\n    };\n  }\n\n  if (customTheme.name) {\n    computedTheme.name = customTheme.name;\n  }\n\n  return computedTheme;\n}\n\n/**\n * m=\"10\"\n *\n * @param value\n * @param theme\n */\nexport const createSpacingStyles = (props: any, theme: any) => {\n  let propKeys: any;\n\n  propKeys = {\n    p: 'padding',\n    pt: 'paddingTop',\n    pr: 'paddingRight',\n    pb: 'paddingBottom',\n    pl: 'paddingLeft',\n    px: 'paddingHorizontal',\n    py: 'paddingVertical',\n    m: 'margin',\n    mt: 'marginTop',\n    mr: 'marginRight',\n    mb: 'marginBottom',\n    ml: 'marginLeft',\n    mx: 'marginHorizontal',\n    my: 'marginVertical',\n    ms: 'marginStart',\n  };\n\n  const computedStyle: any = {};\n\n  Object.keys(propKeys).map((propKey: string) => {\n    const styleProperty = propKeys[propKey];\n\n    if (propKey in props) {\n      computedStyle[styleProperty] = getThemeProperty(theme, props[propKey]);\n    }\n  });\n\n  return computedStyle;\n};\n\n/**\n * create directional style for properties like\n * top, left, right, bottom, horizontal, vertical\n *\n * @param key\n * @param value\n */\nexport const createDirectionalStyles = (\n  key: string,\n  value: any,\n  type: string = 'string'\n) => {\n  if (\n    typeof (value.x || value.y || value.b || value.t || value.l || value.r) ===\n    'undefined'\n  ) {\n    return createStyle(`${key}`, value, type);\n  }\n\n  let computedStyle = {};\n\n  if (typeof value.x !== 'undefined') {\n    computedStyle = {\n      ...computedStyle,\n      ...createStyle(`${key}Horizontal`, value.x, type),\n    };\n  }\n\n  if (typeof value.y !== 'undefined') {\n    computedStyle = {\n      ...computedStyle,\n      ...createStyle(`${key}Vertical`, value.y, type),\n    };\n  }\n\n  if (typeof value.t !== 'undefined') {\n    computedStyle = {\n      ...computedStyle,\n      ...createStyle(`${key}Top`, value.t, type),\n    };\n  }\n\n  if (typeof value.r !== 'undefined') {\n    computedStyle = {\n      ...computedStyle,\n      ...createStyle(`${key}Right`, value.r, type),\n    };\n  }\n\n  if (typeof value.b !== 'undefined') {\n    computedStyle = {\n      ...computedStyle,\n      ...createStyle(`${key}Bottom`, value.b, type),\n    };\n  }\n\n  if (typeof value.l !== 'undefined') {\n    computedStyle = {\n      ...computedStyle,\n      ...createStyle(`${key}Left`, value.l, type),\n    };\n  }\n\n  return computedStyle;\n};\n\n/**\n * extract the theme property from theme\n\n * @param theme\n * @param value\n */\nexport const getThemeProperty = (theme: any, value: any) => {\n  if (typeof theme[value] !== 'undefined') {\n    return theme[value];\n  }\n\n  return value;\n};\n\n/**\n * borderRadius=\"xl\"\n *\n * @param value\n * @param theme\n */\nexport const createBorderRadiusStyles = (props: any, theme: any) => {\n  let propKeys: any;\n\n  propKeys = {\n    rounded: 'borderRadius',\n    roundedTopLeft: 'borderTopLeftRadius',\n    roundedTopRight: 'borderTopRightRadius',\n    roundedBottomLeft: 'borderBottomLeftRadius',\n    roundedBottomRight: 'borderBottomRightRadius',\n    roundedTop: ['borderTopLeftRadius', 'borderTopRightRadius'],\n    roundedLeft: ['borderTopLeftRadius', 'borderBottomLeftRadius'],\n    roundedRight: ['borderTopRightRadius', 'borderBottomRightRadius'],\n    roundedBottom: ['borderBottomLeftRadius', 'borderBottomRightRadius'],\n  };\n\n  const computedStyle: any = {};\n\n  Object.keys(propKeys).map((propKey: string) => {\n    const styleProperty = propKeys[propKey];\n\n    if (propKey in props) {\n      if (styleProperty instanceof Array) {\n        styleProperty.forEach((property) => {\n          computedStyle[property] = getThemeProperty(theme, props[propKey]);\n        });\n      } else {\n        computedStyle[styleProperty] = getThemeProperty(theme, props[propKey]);\n      }\n    }\n  });\n\n  return computedStyle;\n};\n\n/**\n * adds flex property in styles\n *\n * @param props\n */\nexport const createFlexStyles = (props: any) => {\n  let propKeys: any;\n\n  propKeys = {\n    flex: 'flex',\n  };\n\n  const computedStyle: any = {};\n\n  Object.keys(propKeys).map((propKey: string) => {\n    const styleProperty = propKeys[propKey];\n\n    if (propKey in props) {\n      computedStyle[styleProperty] = props[propKey];\n    }\n  });\n\n  return computedStyle;\n};\n\n/**\n * create borderWidth styles\n *\n * @param value\n */\nexport const createBorderWidthStyles = (props: any) => {\n  let propKeys: any;\n\n  propKeys = {\n    borderWidth: 'borderWidth',\n    borderTopWidth: 'borderTopWidth',\n    borderEndWidth: 'borderEndWidth',\n    borderLeftWidth: 'borderLeftWidth',\n    borderRightWidth: 'borderRightWidth',\n    borderBottomWidth: 'borderBottomWidth',\n  };\n\n  const computedStyle: any = {};\n\n  Object.keys(propKeys).map((propKey: string) => {\n    const styleProperty = propKeys[propKey];\n\n    if (propKey in props) {\n      computedStyle[styleProperty] = props[propKey];\n    }\n  });\n\n  return computedStyle;\n};\n\n/**\n * create borderRadius styles\n *\n * @param value\n */\nexport const createBorderColorStyles = (props: any, theme: any) => {\n  let propKeys: any;\n\n  propKeys = {\n    borderColor: 'borderColor',\n    borderTopColor: 'borderTopColor',\n    borderRightColor: 'borderTopColor',\n    borderLeftColor: 'borderLeftColor',\n    borderBottomColor: 'borderBottomColor',\n  };\n\n  const computedStyle: any = {};\n\n  Object.keys(propKeys).map((propKey: string) => {\n    const styleProperty = propKeys[propKey];\n\n    if (propKey in props) {\n      if (styleProperty instanceof Array) {\n        styleProperty.forEach((property) => {\n          computedStyle[property] = getThemeProperty(theme, props[propKey]);\n        });\n      } else {\n        computedStyle[styleProperty] = getThemeProperty(theme, props[propKey]);\n      }\n    }\n  });\n\n  return computedStyle;\n};\n\n/**\n * adds shadows property in styles\n *\n * @param props\n */\nexport const createShadowStyles = (props: any, theme: any) => {\n  let computedStyle: any = {};\n\n  if (props.shadow) {\n    computedStyle = {\n      ...theme.shadow[props.shadow],\n      shadowColor: getThemeProperty(theme.colors, props.shadowColor),\n    };\n  }\n\n  return computedStyle;\n};\n\n/**\n * create style object\n *\n * @param key\n * @param value\n */\nexport const createStyle = (key: string, value: any, type: string) => {\n  return {\n    [key]: type === 'number' ? Number(value) : value,\n  };\n};\n\n/**\n *\n * @param props\n * @param computedStyle\n * @param styleProperty\n * @param atomicProperty\n * @param type\n */\nexport const addPropToComputedStyle = (\n  props: any,\n  computedStyle: any,\n  styleProperty: string,\n  atomicProperty: string,\n  type: string\n) => {\n  if (props[atomicProperty]) {\n    computedStyle = {\n      ...computedStyle,\n      ...createStyle(styleProperty, props[atomicProperty], type),\n    };\n  }\n\n  return computedStyle;\n};\n\n/**\n * position=\"absolute\"\n * top={10}\n *\n * @param value\n */\nexport const createPositionStyle = (props: any) => {\n  let propKeys: any;\n\n  propKeys = {\n    position: 'position',\n    top: 'top',\n    left: 'left',\n    right: 'right',\n    bottom: 'bottom',\n  };\n\n  const computedStyle: any = {};\n\n  Object.keys(propKeys).map((propKey: string) => {\n    const styleProperty = propKeys[propKey];\n\n    if (propKey in props) {\n      computedStyle[styleProperty] = props[propKey];\n    }\n  });\n\n  return computedStyle;\n};\n"]},"metadata":{},"sourceType":"script"}